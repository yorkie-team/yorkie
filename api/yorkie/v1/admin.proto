/*
 * Copyright 2022 The Yorkie Authors. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
syntax = "proto3";

package yorkie.v1;

import "yorkie/v1/resources.proto";

option go_package = "github.com/yorkie-team/yorkie/api/yorkie/v1;v1";

option java_multiple_files = true;
option java_package = "dev.yorkie.api.v1";

// Admin is a service that provides a API for Admin.
service AdminService {
  rpc SignUp(SignUpRequest) returns (SignUpResponse) {}
  rpc LogIn(LogInRequest) returns (LogInResponse) {}
  rpc DeleteAccount(DeleteAccountRequest) returns (DeleteAccountResponse) {}
  rpc ChangePassword(ChangePasswordRequest) returns (ChangePasswordResponse) {}

  rpc CreateProject(CreateProjectRequest) returns (CreateProjectResponse) {}
  rpc ListProjects(ListProjectsRequest) returns (ListProjectsResponse) {}
  rpc GetProject(GetProjectRequest) returns (GetProjectResponse) {}
  rpc GetProjectStats(GetProjectStatsRequest) returns (GetProjectStatsResponse) {}
  rpc UpdateProject(UpdateProjectRequest) returns (UpdateProjectResponse) {}

  rpc CreateDocument(CreateDocumentRequest) returns (CreateDocumentResponse) {}
  rpc ListDocuments (ListDocumentsRequest) returns (ListDocumentsResponse) {}
  rpc GetDocument (GetDocumentRequest) returns (GetDocumentResponse) {}
  rpc GetDocuments (GetDocumentsRequest) returns (GetDocumentsResponse) {}
  rpc UpdateDocument (UpdateDocumentRequest) returns (UpdateDocumentResponse) {}
  rpc RemoveDocumentByAdmin (RemoveDocumentByAdminRequest) returns (RemoveDocumentByAdminResponse) {}
  rpc GetSnapshotMeta (GetSnapshotMetaRequest) returns (GetSnapshotMetaResponse) {}
  rpc SearchDocuments (SearchDocumentsRequest) returns (SearchDocumentsResponse) {}

  rpc ListChanges (ListChangesRequest) returns (ListChangesResponse) {}

  rpc CreateSchema (CreateSchemaRequest) returns (CreateSchemaResponse) {}
  rpc ListSchemas (ListSchemasRequest) returns (ListSchemasResponse) {}
  rpc GetSchema (GetSchemaRequest) returns (GetSchemaResponse) {}
  rpc GetSchemas (GetSchemasRequest) returns (GetSchemasResponse) {}
  rpc RemoveSchema (RemoveSchemaRequest) returns (RemoveSchemaResponse) {}

  rpc GetServerVersion (GetServerVersionRequest) returns (GetServerVersionResponse) {}

  rpc RotateProjectKeys(RotateProjectKeysRequest) returns (RotateProjectKeysResponse) {}
}

message SignUpRequest {
  string username = 1;
  string password = 2;
}

message SignUpResponse {
  User user = 1;
}

message LogInRequest {
  string username = 1;
  string password = 2;
}

message LogInResponse {
  string token = 1;
}

message DeleteAccountRequest {
  string username = 1;
  string password = 2;
}

message DeleteAccountResponse {
}

message ChangePasswordRequest {
  string username = 1;
  string current_password = 2;
  string new_password = 3;
}

message ChangePasswordResponse {
}

message CreateProjectRequest {
  string name = 1;
}

message CreateProjectResponse {
  Project project = 1;
}

message GetProjectRequest {
  string name = 1;
}

message GetProjectResponse {
  Project project = 1;
}

message ListProjectsRequest {}

message ListProjectsResponse {
  repeated Project projects = 1;
}

message UpdateProjectRequest {
  string id = 1;
  UpdatableProjectFields fields = 2;
}

message UpdateProjectResponse {
  Project project = 1;
}

message GetProjectStatsRequest {
  enum DateRange {
    DATE_RANGE_UNSPECIFIED = 0;
    DATE_RANGE_LAST_1W = 1;
    DATE_RANGE_LAST_4W = 2;
    DATE_RANGE_LAST_3M = 3;
    DATE_RANGE_LAST_12M = 4;
  }

  string project_name = 1;
  DateRange date_range = 2;
}

message GetProjectStatsResponse {
  int32 active_users_count = 1;
  repeated MetricPoint active_users = 2;
  int64 documents_count = 3;
  int64 clients_count = 4;
}

message CreateDocumentRequest {
  string project_name = 1;
  string document_key = 2;
  string initial_root = 3;
}

message CreateDocumentResponse {
  DocumentSummary document = 1;
}

message ListDocumentsRequest {
  string project_name = 1;
  string previous_id = 2;
  int32 page_size = 3;
  bool is_forward = 4;
  bool include_snapshot = 5;
}

message ListDocumentsResponse {
  repeated DocumentSummary documents = 1;
}

message GetDocumentRequest {
  string project_name = 1;
  string document_key = 2;
}

message GetDocumentResponse {
  DocumentSummary document = 1;
}

message GetDocumentsRequest {
  string project_name = 1;
  repeated string document_keys = 2;
  bool include_snapshot = 3;
}

message GetDocumentsResponse {
  repeated DocumentSummary documents = 1;
}

message UpdateDocumentRequest {
  string project_name = 1;
  string document_key = 2;
  string root = 3;
  string schema_key = 4;
}

message UpdateDocumentResponse {
  DocumentSummary document = 1;
}

message RemoveDocumentByAdminRequest {
  string project_name = 1;
  string document_key = 2;
  bool force = 3;
}

message RemoveDocumentByAdminResponse {}

message GetSnapshotMetaRequest {
  string project_name = 1;
  string document_key = 2;
  int64 server_seq = 3;
}

message GetSnapshotMetaResponse {
  bytes snapshot = 1;
  int64 lamport = 2;
  VersionVector version_vector = 3;
}

message SearchDocumentsRequest {
  string project_name = 1;
  string query = 2;
  int32  page_size = 3; 
}

message SearchDocumentsResponse {
  int32 total_count = 1;
  repeated DocumentSummary documents = 2;
}

message ListChangesRequest {
  string project_name = 1;
  string document_key = 2;
  int64 previous_seq = 3;
  int32  page_size = 4; 
  bool   is_forward = 5;
}

message ListChangesResponse {
  repeated Change changes = 1;
}

message CreateSchemaRequest {
  string project_name = 1;
  string schema_name = 2;
  int32 schema_version = 3;
  string schema_body = 4;
  repeated Rule rules = 5;
}

message CreateSchemaResponse {
  Schema schema = 1;
}

message ListSchemasRequest {
  string project_name = 1;
}

message ListSchemasResponse {
  repeated Schema schemas = 1;
}

message GetSchemaRequest {
  string project_name = 1;
  string schema_name = 2;
  int32 version = 3;
}

message GetSchemaResponse {
  Schema schema = 1;
}

message GetSchemasRequest {
  string project_name = 1;
  string schema_name = 2;
}

message GetSchemasResponse {
  repeated Schema schemas = 1;
}

message RemoveSchemaRequest {
  string project_name = 1;
  string schema_name = 2;
  int32 version = 3;
}

message RemoveSchemaResponse {}

message GetServerVersionRequest {}

message GetServerVersionResponse {
  string yorkie_version = 1;
  string go_version = 2;
  string build_date = 3;
}

message RotateProjectKeysRequest {
  string id = 1;
}

message RotateProjectKeysResponse {
  Project project = 1;
}
