// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: yorkie/v1/yorkie.proto

package v1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ActivateClientRequest struct {
	ClientKey            string   `protobuf:"bytes,1,opt,name=client_key,json=clientKey,proto3" json:"client_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ActivateClientRequest) Reset()         { *m = ActivateClientRequest{} }
func (m *ActivateClientRequest) String() string { return proto.CompactTextString(m) }
func (*ActivateClientRequest) ProtoMessage()    {}
func (*ActivateClientRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_40070c858814ab24, []int{0}
}
func (m *ActivateClientRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ActivateClientRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ActivateClientRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ActivateClientRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivateClientRequest.Merge(m, src)
}
func (m *ActivateClientRequest) XXX_Size() int {
	return m.Size()
}
func (m *ActivateClientRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivateClientRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ActivateClientRequest proto.InternalMessageInfo

func (m *ActivateClientRequest) GetClientKey() string {
	if m != nil {
		return m.ClientKey
	}
	return ""
}

type ActivateClientResponse struct {
	ClientId             string   `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ActivateClientResponse) Reset()         { *m = ActivateClientResponse{} }
func (m *ActivateClientResponse) String() string { return proto.CompactTextString(m) }
func (*ActivateClientResponse) ProtoMessage()    {}
func (*ActivateClientResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_40070c858814ab24, []int{1}
}
func (m *ActivateClientResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ActivateClientResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ActivateClientResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ActivateClientResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivateClientResponse.Merge(m, src)
}
func (m *ActivateClientResponse) XXX_Size() int {
	return m.Size()
}
func (m *ActivateClientResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivateClientResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ActivateClientResponse proto.InternalMessageInfo

func (m *ActivateClientResponse) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

type DeactivateClientRequest struct {
	ClientId             string   `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeactivateClientRequest) Reset()         { *m = DeactivateClientRequest{} }
func (m *DeactivateClientRequest) String() string { return proto.CompactTextString(m) }
func (*DeactivateClientRequest) ProtoMessage()    {}
func (*DeactivateClientRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_40070c858814ab24, []int{2}
}
func (m *DeactivateClientRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DeactivateClientRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DeactivateClientRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DeactivateClientRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeactivateClientRequest.Merge(m, src)
}
func (m *DeactivateClientRequest) XXX_Size() int {
	return m.Size()
}
func (m *DeactivateClientRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeactivateClientRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeactivateClientRequest proto.InternalMessageInfo

func (m *DeactivateClientRequest) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

type DeactivateClientResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeactivateClientResponse) Reset()         { *m = DeactivateClientResponse{} }
func (m *DeactivateClientResponse) String() string { return proto.CompactTextString(m) }
func (*DeactivateClientResponse) ProtoMessage()    {}
func (*DeactivateClientResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_40070c858814ab24, []int{3}
}
func (m *DeactivateClientResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DeactivateClientResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DeactivateClientResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DeactivateClientResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeactivateClientResponse.Merge(m, src)
}
func (m *DeactivateClientResponse) XXX_Size() int {
	return m.Size()
}
func (m *DeactivateClientResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeactivateClientResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeactivateClientResponse proto.InternalMessageInfo

type AttachDocumentRequest struct {
	ClientId             string      `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	ChangePack           *ChangePack `protobuf:"bytes,2,opt,name=change_pack,json=changePack,proto3" json:"change_pack,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *AttachDocumentRequest) Reset()         { *m = AttachDocumentRequest{} }
func (m *AttachDocumentRequest) String() string { return proto.CompactTextString(m) }
func (*AttachDocumentRequest) ProtoMessage()    {}
func (*AttachDocumentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_40070c858814ab24, []int{4}
}
func (m *AttachDocumentRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AttachDocumentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AttachDocumentRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AttachDocumentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AttachDocumentRequest.Merge(m, src)
}
func (m *AttachDocumentRequest) XXX_Size() int {
	return m.Size()
}
func (m *AttachDocumentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AttachDocumentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AttachDocumentRequest proto.InternalMessageInfo

func (m *AttachDocumentRequest) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

func (m *AttachDocumentRequest) GetChangePack() *ChangePack {
	if m != nil {
		return m.ChangePack
	}
	return nil
}

type AttachDocumentResponse struct {
	DocumentId           string      `protobuf:"bytes,1,opt,name=document_id,json=documentId,proto3" json:"document_id,omitempty"`
	ChangePack           *ChangePack `protobuf:"bytes,2,opt,name=change_pack,json=changePack,proto3" json:"change_pack,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *AttachDocumentResponse) Reset()         { *m = AttachDocumentResponse{} }
func (m *AttachDocumentResponse) String() string { return proto.CompactTextString(m) }
func (*AttachDocumentResponse) ProtoMessage()    {}
func (*AttachDocumentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_40070c858814ab24, []int{5}
}
func (m *AttachDocumentResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AttachDocumentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AttachDocumentResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AttachDocumentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AttachDocumentResponse.Merge(m, src)
}
func (m *AttachDocumentResponse) XXX_Size() int {
	return m.Size()
}
func (m *AttachDocumentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AttachDocumentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AttachDocumentResponse proto.InternalMessageInfo

func (m *AttachDocumentResponse) GetDocumentId() string {
	if m != nil {
		return m.DocumentId
	}
	return ""
}

func (m *AttachDocumentResponse) GetChangePack() *ChangePack {
	if m != nil {
		return m.ChangePack
	}
	return nil
}

type DetachDocumentRequest struct {
	ClientId             string      `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	DocumentId           string      `protobuf:"bytes,2,opt,name=document_id,json=documentId,proto3" json:"document_id,omitempty"`
	ChangePack           *ChangePack `protobuf:"bytes,3,opt,name=change_pack,json=changePack,proto3" json:"change_pack,omitempty"`
	RemoveIfNotAttached  bool        `protobuf:"varint,4,opt,name=remove_if_not_attached,json=removeIfNotAttached,proto3" json:"remove_if_not_attached,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *DetachDocumentRequest) Reset()         { *m = DetachDocumentRequest{} }
func (m *DetachDocumentRequest) String() string { return proto.CompactTextString(m) }
func (*DetachDocumentRequest) ProtoMessage()    {}
func (*DetachDocumentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_40070c858814ab24, []int{6}
}
func (m *DetachDocumentRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DetachDocumentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DetachDocumentRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DetachDocumentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DetachDocumentRequest.Merge(m, src)
}
func (m *DetachDocumentRequest) XXX_Size() int {
	return m.Size()
}
func (m *DetachDocumentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DetachDocumentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DetachDocumentRequest proto.InternalMessageInfo

func (m *DetachDocumentRequest) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

func (m *DetachDocumentRequest) GetDocumentId() string {
	if m != nil {
		return m.DocumentId
	}
	return ""
}

func (m *DetachDocumentRequest) GetChangePack() *ChangePack {
	if m != nil {
		return m.ChangePack
	}
	return nil
}

func (m *DetachDocumentRequest) GetRemoveIfNotAttached() bool {
	if m != nil {
		return m.RemoveIfNotAttached
	}
	return false
}

type DetachDocumentResponse struct {
	ChangePack           *ChangePack `protobuf:"bytes,2,opt,name=change_pack,json=changePack,proto3" json:"change_pack,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *DetachDocumentResponse) Reset()         { *m = DetachDocumentResponse{} }
func (m *DetachDocumentResponse) String() string { return proto.CompactTextString(m) }
func (*DetachDocumentResponse) ProtoMessage()    {}
func (*DetachDocumentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_40070c858814ab24, []int{7}
}
func (m *DetachDocumentResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DetachDocumentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DetachDocumentResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DetachDocumentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DetachDocumentResponse.Merge(m, src)
}
func (m *DetachDocumentResponse) XXX_Size() int {
	return m.Size()
}
func (m *DetachDocumentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DetachDocumentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DetachDocumentResponse proto.InternalMessageInfo

func (m *DetachDocumentResponse) GetChangePack() *ChangePack {
	if m != nil {
		return m.ChangePack
	}
	return nil
}

type WatchDocumentRequest struct {
	ClientId             string   `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	DocumentId           string   `protobuf:"bytes,2,opt,name=document_id,json=documentId,proto3" json:"document_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WatchDocumentRequest) Reset()         { *m = WatchDocumentRequest{} }
func (m *WatchDocumentRequest) String() string { return proto.CompactTextString(m) }
func (*WatchDocumentRequest) ProtoMessage()    {}
func (*WatchDocumentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_40070c858814ab24, []int{8}
}
func (m *WatchDocumentRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *WatchDocumentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_WatchDocumentRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *WatchDocumentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WatchDocumentRequest.Merge(m, src)
}
func (m *WatchDocumentRequest) XXX_Size() int {
	return m.Size()
}
func (m *WatchDocumentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WatchDocumentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WatchDocumentRequest proto.InternalMessageInfo

func (m *WatchDocumentRequest) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

func (m *WatchDocumentRequest) GetDocumentId() string {
	if m != nil {
		return m.DocumentId
	}
	return ""
}

type WatchDocumentResponse struct {
	// Types that are valid to be assigned to Body:
	//	*WatchDocumentResponse_Initialization_
	//	*WatchDocumentResponse_Event
	Body                 isWatchDocumentResponse_Body `protobuf_oneof:"body"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *WatchDocumentResponse) Reset()         { *m = WatchDocumentResponse{} }
func (m *WatchDocumentResponse) String() string { return proto.CompactTextString(m) }
func (*WatchDocumentResponse) ProtoMessage()    {}
func (*WatchDocumentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_40070c858814ab24, []int{9}
}
func (m *WatchDocumentResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *WatchDocumentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_WatchDocumentResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *WatchDocumentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WatchDocumentResponse.Merge(m, src)
}
func (m *WatchDocumentResponse) XXX_Size() int {
	return m.Size()
}
func (m *WatchDocumentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_WatchDocumentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_WatchDocumentResponse proto.InternalMessageInfo

type isWatchDocumentResponse_Body interface {
	isWatchDocumentResponse_Body()
	MarshalTo([]byte) (int, error)
	Size() int
}

type WatchDocumentResponse_Initialization_ struct {
	Initialization *WatchDocumentResponse_Initialization `protobuf:"bytes,1,opt,name=initialization,proto3,oneof" json:"initialization,omitempty"`
}
type WatchDocumentResponse_Event struct {
	Event *DocEvent `protobuf:"bytes,2,opt,name=event,proto3,oneof" json:"event,omitempty"`
}

func (*WatchDocumentResponse_Initialization_) isWatchDocumentResponse_Body() {}
func (*WatchDocumentResponse_Event) isWatchDocumentResponse_Body()           {}

func (m *WatchDocumentResponse) GetBody() isWatchDocumentResponse_Body {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *WatchDocumentResponse) GetInitialization() *WatchDocumentResponse_Initialization {
	if x, ok := m.GetBody().(*WatchDocumentResponse_Initialization_); ok {
		return x.Initialization
	}
	return nil
}

func (m *WatchDocumentResponse) GetEvent() *DocEvent {
	if x, ok := m.GetBody().(*WatchDocumentResponse_Event); ok {
		return x.Event
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*WatchDocumentResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*WatchDocumentResponse_Initialization_)(nil),
		(*WatchDocumentResponse_Event)(nil),
	}
}

type WatchDocumentResponse_Initialization struct {
	ClientIds            []string `protobuf:"bytes,1,rep,name=client_ids,json=clientIds,proto3" json:"client_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WatchDocumentResponse_Initialization) Reset()         { *m = WatchDocumentResponse_Initialization{} }
func (m *WatchDocumentResponse_Initialization) String() string { return proto.CompactTextString(m) }
func (*WatchDocumentResponse_Initialization) ProtoMessage()    {}
func (*WatchDocumentResponse_Initialization) Descriptor() ([]byte, []int) {
	return fileDescriptor_40070c858814ab24, []int{9, 0}
}
func (m *WatchDocumentResponse_Initialization) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *WatchDocumentResponse_Initialization) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_WatchDocumentResponse_Initialization.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *WatchDocumentResponse_Initialization) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WatchDocumentResponse_Initialization.Merge(m, src)
}
func (m *WatchDocumentResponse_Initialization) XXX_Size() int {
	return m.Size()
}
func (m *WatchDocumentResponse_Initialization) XXX_DiscardUnknown() {
	xxx_messageInfo_WatchDocumentResponse_Initialization.DiscardUnknown(m)
}

var xxx_messageInfo_WatchDocumentResponse_Initialization proto.InternalMessageInfo

func (m *WatchDocumentResponse_Initialization) GetClientIds() []string {
	if m != nil {
		return m.ClientIds
	}
	return nil
}

type RemoveDocumentRequest struct {
	ClientId             string      `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	DocumentId           string      `protobuf:"bytes,2,opt,name=document_id,json=documentId,proto3" json:"document_id,omitempty"`
	ChangePack           *ChangePack `protobuf:"bytes,3,opt,name=change_pack,json=changePack,proto3" json:"change_pack,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *RemoveDocumentRequest) Reset()         { *m = RemoveDocumentRequest{} }
func (m *RemoveDocumentRequest) String() string { return proto.CompactTextString(m) }
func (*RemoveDocumentRequest) ProtoMessage()    {}
func (*RemoveDocumentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_40070c858814ab24, []int{10}
}
func (m *RemoveDocumentRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RemoveDocumentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RemoveDocumentRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RemoveDocumentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveDocumentRequest.Merge(m, src)
}
func (m *RemoveDocumentRequest) XXX_Size() int {
	return m.Size()
}
func (m *RemoveDocumentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveDocumentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveDocumentRequest proto.InternalMessageInfo

func (m *RemoveDocumentRequest) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

func (m *RemoveDocumentRequest) GetDocumentId() string {
	if m != nil {
		return m.DocumentId
	}
	return ""
}

func (m *RemoveDocumentRequest) GetChangePack() *ChangePack {
	if m != nil {
		return m.ChangePack
	}
	return nil
}

type RemoveDocumentResponse struct {
	ChangePack           *ChangePack `protobuf:"bytes,1,opt,name=change_pack,json=changePack,proto3" json:"change_pack,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *RemoveDocumentResponse) Reset()         { *m = RemoveDocumentResponse{} }
func (m *RemoveDocumentResponse) String() string { return proto.CompactTextString(m) }
func (*RemoveDocumentResponse) ProtoMessage()    {}
func (*RemoveDocumentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_40070c858814ab24, []int{11}
}
func (m *RemoveDocumentResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RemoveDocumentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RemoveDocumentResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RemoveDocumentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveDocumentResponse.Merge(m, src)
}
func (m *RemoveDocumentResponse) XXX_Size() int {
	return m.Size()
}
func (m *RemoveDocumentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveDocumentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveDocumentResponse proto.InternalMessageInfo

func (m *RemoveDocumentResponse) GetChangePack() *ChangePack {
	if m != nil {
		return m.ChangePack
	}
	return nil
}

type PushPullChangesRequest struct {
	ClientId             string      `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	DocumentId           string      `protobuf:"bytes,2,opt,name=document_id,json=documentId,proto3" json:"document_id,omitempty"`
	ChangePack           *ChangePack `protobuf:"bytes,3,opt,name=change_pack,json=changePack,proto3" json:"change_pack,omitempty"`
	PushOnly             bool        `protobuf:"varint,4,opt,name=push_only,json=pushOnly,proto3" json:"push_only,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *PushPullChangesRequest) Reset()         { *m = PushPullChangesRequest{} }
func (m *PushPullChangesRequest) String() string { return proto.CompactTextString(m) }
func (*PushPullChangesRequest) ProtoMessage()    {}
func (*PushPullChangesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_40070c858814ab24, []int{12}
}
func (m *PushPullChangesRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PushPullChangesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PushPullChangesRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PushPullChangesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushPullChangesRequest.Merge(m, src)
}
func (m *PushPullChangesRequest) XXX_Size() int {
	return m.Size()
}
func (m *PushPullChangesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PushPullChangesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PushPullChangesRequest proto.InternalMessageInfo

func (m *PushPullChangesRequest) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

func (m *PushPullChangesRequest) GetDocumentId() string {
	if m != nil {
		return m.DocumentId
	}
	return ""
}

func (m *PushPullChangesRequest) GetChangePack() *ChangePack {
	if m != nil {
		return m.ChangePack
	}
	return nil
}

func (m *PushPullChangesRequest) GetPushOnly() bool {
	if m != nil {
		return m.PushOnly
	}
	return false
}

type PushPullChangesResponse struct {
	ChangePack           *ChangePack `protobuf:"bytes,1,opt,name=change_pack,json=changePack,proto3" json:"change_pack,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *PushPullChangesResponse) Reset()         { *m = PushPullChangesResponse{} }
func (m *PushPullChangesResponse) String() string { return proto.CompactTextString(m) }
func (*PushPullChangesResponse) ProtoMessage()    {}
func (*PushPullChangesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_40070c858814ab24, []int{13}
}
func (m *PushPullChangesResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PushPullChangesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PushPullChangesResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PushPullChangesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushPullChangesResponse.Merge(m, src)
}
func (m *PushPullChangesResponse) XXX_Size() int {
	return m.Size()
}
func (m *PushPullChangesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PushPullChangesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PushPullChangesResponse proto.InternalMessageInfo

func (m *PushPullChangesResponse) GetChangePack() *ChangePack {
	if m != nil {
		return m.ChangePack
	}
	return nil
}

func init() {
	proto.RegisterType((*ActivateClientRequest)(nil), "yorkie.v1.ActivateClientRequest")
	proto.RegisterType((*ActivateClientResponse)(nil), "yorkie.v1.ActivateClientResponse")
	proto.RegisterType((*DeactivateClientRequest)(nil), "yorkie.v1.DeactivateClientRequest")
	proto.RegisterType((*DeactivateClientResponse)(nil), "yorkie.v1.DeactivateClientResponse")
	proto.RegisterType((*AttachDocumentRequest)(nil), "yorkie.v1.AttachDocumentRequest")
	proto.RegisterType((*AttachDocumentResponse)(nil), "yorkie.v1.AttachDocumentResponse")
	proto.RegisterType((*DetachDocumentRequest)(nil), "yorkie.v1.DetachDocumentRequest")
	proto.RegisterType((*DetachDocumentResponse)(nil), "yorkie.v1.DetachDocumentResponse")
	proto.RegisterType((*WatchDocumentRequest)(nil), "yorkie.v1.WatchDocumentRequest")
	proto.RegisterType((*WatchDocumentResponse)(nil), "yorkie.v1.WatchDocumentResponse")
	proto.RegisterType((*WatchDocumentResponse_Initialization)(nil), "yorkie.v1.WatchDocumentResponse.Initialization")
	proto.RegisterType((*RemoveDocumentRequest)(nil), "yorkie.v1.RemoveDocumentRequest")
	proto.RegisterType((*RemoveDocumentResponse)(nil), "yorkie.v1.RemoveDocumentResponse")
	proto.RegisterType((*PushPullChangesRequest)(nil), "yorkie.v1.PushPullChangesRequest")
	proto.RegisterType((*PushPullChangesResponse)(nil), "yorkie.v1.PushPullChangesResponse")
}

func init() { proto.RegisterFile("yorkie/v1/yorkie.proto", fileDescriptor_40070c858814ab24) }

var fileDescriptor_40070c858814ab24 = []byte{
	// 650 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x56, 0xcf, 0x6e, 0xd3, 0x4e,
	0x10, 0xce, 0xf6, 0x9f, 0x9a, 0x89, 0xda, 0xdf, 0x8f, 0x2d, 0x49, 0x43, 0x2a, 0x52, 0xb3, 0x5c,
	0x2a, 0x55, 0x72, 0x48, 0x2b, 0x7a, 0xe1, 0xd4, 0x36, 0x48, 0x8d, 0x90, 0x20, 0x18, 0x44, 0xd5,
	0x4a, 0xc8, 0x72, 0xed, 0x2d, 0x59, 0xc5, 0xf5, 0xa6, 0xf6, 0xda, 0x92, 0x79, 0x00, 0x6e, 0xdc,
	0x79, 0x07, 0xde, 0x82, 0x13, 0x47, 0x8e, 0x1c, 0x51, 0x79, 0x11, 0x14, 0xdb, 0x4d, 0xbd, 0xee,
	0x92, 0x16, 0x8a, 0x04, 0xb7, 0xcd, 0xec, 0x37, 0xdf, 0x7c, 0x3b, 0x99, 0xf9, 0x64, 0xa8, 0xc5,
	0xdc, 0x1f, 0x30, 0xda, 0x8a, 0xda, 0xad, 0xf4, 0xa4, 0x0f, 0x7d, 0x2e, 0x38, 0x2e, 0x67, 0xbf,
	0xa2, 0x76, 0xe3, 0xce, 0x05, 0xc4, 0xa7, 0x01, 0x0f, 0x7d, 0x9b, 0x06, 0x29, 0x8a, 0x6c, 0x41,
	0x75, 0xdb, 0x16, 0x2c, 0xb2, 0x04, 0xdd, 0x75, 0x19, 0xf5, 0x84, 0x41, 0x4f, 0x43, 0x1a, 0x08,
	0x7c, 0x17, 0xc0, 0x4e, 0x02, 0xe6, 0x80, 0xc6, 0x75, 0xa4, 0xa1, 0xb5, 0xb2, 0x51, 0x4e, 0x23,
	0x4f, 0x68, 0x4c, 0x1e, 0x42, 0xad, 0x98, 0x17, 0x0c, 0xb9, 0x17, 0x50, 0xbc, 0x02, 0x19, 0xcc,
	0x64, 0x4e, 0x96, 0x37, 0x9f, 0x06, 0xba, 0x0e, 0xd9, 0x82, 0xe5, 0x0e, 0xb5, 0x94, 0x05, 0x27,
	0xe6, 0x35, 0xa0, 0x7e, 0x39, 0x2f, 0x2d, 0x48, 0x5c, 0xa8, 0x6e, 0x0b, 0x61, 0xd9, 0xfd, 0x0e,
	0xb7, 0xc3, 0x93, 0x6b, 0x32, 0xe2, 0x2d, 0xa8, 0xd8, 0x7d, 0xcb, 0x7b, 0x43, 0xcd, 0xa1, 0x65,
	0x0f, 0xea, 0x53, 0x1a, 0x5a, 0xab, 0x6c, 0x54, 0xf5, 0x71, 0xd3, 0xf4, 0xdd, 0xe4, 0xb6, 0x67,
	0xd9, 0x03, 0x03, 0xec, 0xf1, 0x99, 0x9c, 0x42, 0xad, 0x58, 0x2d, 0x7b, 0xf8, 0x2a, 0x54, 0x9c,
	0x2c, 0x76, 0x51, 0x10, 0xce, 0x43, 0x37, 0x28, 0xf9, 0x09, 0x41, 0xb5, 0x43, 0x7f, 0xf9, 0x85,
	0x05, 0x3d, 0x53, 0x57, 0xe9, 0x99, 0xbe, 0xa6, 0x1e, 0xbc, 0x09, 0x35, 0x9f, 0x9e, 0xf0, 0x88,
	0x9a, 0xec, 0xd8, 0xf4, 0xb8, 0x30, 0xad, 0xa4, 0x21, 0xd4, 0xa9, 0xcf, 0x68, 0x68, 0x6d, 0xde,
	0x58, 0x4a, 0x6f, 0xbb, 0xc7, 0x4f, 0xb9, 0xd8, 0xce, 0xae, 0x48, 0x0f, 0x6a, 0xc5, 0x37, 0x64,
	0x7d, 0xfb, 0xdd, 0xb6, 0xbc, 0x84, 0xdb, 0xfb, 0x96, 0xf8, 0xc3, 0x4d, 0x21, 0x5f, 0x11, 0x54,
	0x0b, 0xb4, 0x99, 0xce, 0x03, 0x58, 0x64, 0x1e, 0x13, 0xcc, 0x72, 0xd9, 0x5b, 0x4b, 0x30, 0xee,
	0x25, 0xe4, 0x95, 0x8d, 0x56, 0x4e, 0xaa, 0x32, 0x53, 0xef, 0x4a, 0x69, 0x7b, 0x25, 0xa3, 0x40,
	0x84, 0xd7, 0x61, 0x96, 0x46, 0xd4, 0x13, 0xd9, 0xe3, 0x97, 0x72, 0x8c, 0x1d, 0x6e, 0x3f, 0x1e,
	0x5d, 0xed, 0x95, 0x8c, 0x14, 0xd3, 0x68, 0xc1, 0xa2, 0x4c, 0x98, 0xdb, 0x55, 0xe6, 0x04, 0x75,
	0xa4, 0x4d, 0x5f, 0xec, 0x6a, 0xd7, 0x09, 0x76, 0xe6, 0x60, 0xe6, 0x88, 0x3b, 0x31, 0x79, 0x8f,
	0xa0, 0x6a, 0x24, 0x7f, 0xcd, 0x3f, 0x31, 0x47, 0xa3, 0x91, 0x28, 0xca, 0x51, 0x8f, 0x04, 0xba,
	0x2e, 0xe3, 0x47, 0x04, 0xb5, 0x5e, 0x18, 0xf4, 0x7b, 0xa1, 0xeb, 0xa6, 0x90, 0xe0, 0xef, 0xae,
	0xca, 0x0a, 0x94, 0x87, 0x61, 0xd0, 0x37, 0xb9, 0xe7, 0xc6, 0xd9, 0x76, 0xcc, 0x8f, 0x02, 0xcf,
	0x3c, 0x37, 0x26, 0xcf, 0x61, 0xf9, 0x92, 0xd8, 0x9b, 0x35, 0x60, 0xe3, 0xdd, 0x2c, 0x2c, 0x1c,
	0x24, 0xa0, 0x17, 0xd4, 0x8f, 0x98, 0x4d, 0xf1, 0x3e, 0x2c, 0xca, 0x46, 0x8d, 0xb5, 0x1c, 0x8d,
	0xd2, 0xfb, 0x1b, 0xf7, 0x26, 0x20, 0x32, 0xd3, 0x2d, 0xe1, 0xd7, 0xf0, 0x7f, 0xd1, 0x92, 0x31,
	0xc9, 0x0f, 0xae, 0xda, 0xe7, 0x1b, 0xf7, 0x27, 0x62, 0xc6, 0xf4, 0x23, 0xdd, 0x92, 0xcf, 0xca,
	0xba, 0x55, 0x86, 0x2f, 0xeb, 0x56, 0x9a, 0x74, 0x4a, 0x2c, 0x1b, 0x91, 0x44, 0xac, 0xf4, 0x59,
	0x89, 0x58, 0xed, 0x62, 0x29, 0xb1, 0x3c, 0xce, 0x12, 0xb1, 0x72, 0xf1, 0x24, 0x62, 0xf5, 0x2e,
	0x90, 0x12, 0x3e, 0x84, 0xff, 0x0a, 0x73, 0x82, 0xf3, 0x79, 0xea, 0x81, 0x6f, 0x90, 0x49, 0x90,
	0x31, 0xf7, 0x2b, 0x58, 0x90, 0x3c, 0x0b, 0xaf, 0xfe, 0xdc, 0xcd, 0x52, 0x5e, 0xed, 0x2a, 0xbb,
	0x23, 0xa5, 0x07, 0x68, 0x67, 0xfd, 0xf3, 0x59, 0x13, 0x7d, 0x39, 0x6b, 0xa2, 0x6f, 0x67, 0x4d,
	0xf4, 0xe1, 0x7b, 0xb3, 0x04, 0xb7, 0x1c, 0x1a, 0x9d, 0xa7, 0x5a, 0x43, 0xa6, 0x47, 0xed, 0x1e,
	0x3a, 0x9c, 0xd1, 0x1f, 0x45, 0xed, 0xa3, 0xb9, 0xe4, 0x5b, 0x64, 0xf3, 0x47, 0x00, 0x00, 0x00,
	0xff, 0xff, 0x8c, 0xb9, 0x33, 0xc1, 0xcb, 0x08, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// YorkieServiceClient is the client API for YorkieService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type YorkieServiceClient interface {
	ActivateClient(ctx context.Context, in *ActivateClientRequest, opts ...grpc.CallOption) (*ActivateClientResponse, error)
	DeactivateClient(ctx context.Context, in *DeactivateClientRequest, opts ...grpc.CallOption) (*DeactivateClientResponse, error)
	AttachDocument(ctx context.Context, in *AttachDocumentRequest, opts ...grpc.CallOption) (*AttachDocumentResponse, error)
	DetachDocument(ctx context.Context, in *DetachDocumentRequest, opts ...grpc.CallOption) (*DetachDocumentResponse, error)
	RemoveDocument(ctx context.Context, in *RemoveDocumentRequest, opts ...grpc.CallOption) (*RemoveDocumentResponse, error)
	PushPullChanges(ctx context.Context, in *PushPullChangesRequest, opts ...grpc.CallOption) (*PushPullChangesResponse, error)
	WatchDocument(ctx context.Context, in *WatchDocumentRequest, opts ...grpc.CallOption) (YorkieService_WatchDocumentClient, error)
}

type yorkieServiceClient struct {
	cc *grpc.ClientConn
}

func NewYorkieServiceClient(cc *grpc.ClientConn) YorkieServiceClient {
	return &yorkieServiceClient{cc}
}

func (c *yorkieServiceClient) ActivateClient(ctx context.Context, in *ActivateClientRequest, opts ...grpc.CallOption) (*ActivateClientResponse, error) {
	out := new(ActivateClientResponse)
	err := c.cc.Invoke(ctx, "/yorkie.v1.YorkieService/ActivateClient", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yorkieServiceClient) DeactivateClient(ctx context.Context, in *DeactivateClientRequest, opts ...grpc.CallOption) (*DeactivateClientResponse, error) {
	out := new(DeactivateClientResponse)
	err := c.cc.Invoke(ctx, "/yorkie.v1.YorkieService/DeactivateClient", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yorkieServiceClient) AttachDocument(ctx context.Context, in *AttachDocumentRequest, opts ...grpc.CallOption) (*AttachDocumentResponse, error) {
	out := new(AttachDocumentResponse)
	err := c.cc.Invoke(ctx, "/yorkie.v1.YorkieService/AttachDocument", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yorkieServiceClient) DetachDocument(ctx context.Context, in *DetachDocumentRequest, opts ...grpc.CallOption) (*DetachDocumentResponse, error) {
	out := new(DetachDocumentResponse)
	err := c.cc.Invoke(ctx, "/yorkie.v1.YorkieService/DetachDocument", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yorkieServiceClient) RemoveDocument(ctx context.Context, in *RemoveDocumentRequest, opts ...grpc.CallOption) (*RemoveDocumentResponse, error) {
	out := new(RemoveDocumentResponse)
	err := c.cc.Invoke(ctx, "/yorkie.v1.YorkieService/RemoveDocument", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yorkieServiceClient) PushPullChanges(ctx context.Context, in *PushPullChangesRequest, opts ...grpc.CallOption) (*PushPullChangesResponse, error) {
	out := new(PushPullChangesResponse)
	err := c.cc.Invoke(ctx, "/yorkie.v1.YorkieService/PushPullChanges", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yorkieServiceClient) WatchDocument(ctx context.Context, in *WatchDocumentRequest, opts ...grpc.CallOption) (YorkieService_WatchDocumentClient, error) {
	stream, err := c.cc.NewStream(ctx, &_YorkieService_serviceDesc.Streams[0], "/yorkie.v1.YorkieService/WatchDocument", opts...)
	if err != nil {
		return nil, err
	}
	x := &yorkieServiceWatchDocumentClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type YorkieService_WatchDocumentClient interface {
	Recv() (*WatchDocumentResponse, error)
	grpc.ClientStream
}

type yorkieServiceWatchDocumentClient struct {
	grpc.ClientStream
}

func (x *yorkieServiceWatchDocumentClient) Recv() (*WatchDocumentResponse, error) {
	m := new(WatchDocumentResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// YorkieServiceServer is the server API for YorkieService service.
type YorkieServiceServer interface {
	ActivateClient(context.Context, *ActivateClientRequest) (*ActivateClientResponse, error)
	DeactivateClient(context.Context, *DeactivateClientRequest) (*DeactivateClientResponse, error)
	AttachDocument(context.Context, *AttachDocumentRequest) (*AttachDocumentResponse, error)
	DetachDocument(context.Context, *DetachDocumentRequest) (*DetachDocumentResponse, error)
	RemoveDocument(context.Context, *RemoveDocumentRequest) (*RemoveDocumentResponse, error)
	PushPullChanges(context.Context, *PushPullChangesRequest) (*PushPullChangesResponse, error)
	WatchDocument(*WatchDocumentRequest, YorkieService_WatchDocumentServer) error
}

// UnimplementedYorkieServiceServer can be embedded to have forward compatible implementations.
type UnimplementedYorkieServiceServer struct {
}

func (*UnimplementedYorkieServiceServer) ActivateClient(ctx context.Context, req *ActivateClientRequest) (*ActivateClientResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ActivateClient not implemented")
}
func (*UnimplementedYorkieServiceServer) DeactivateClient(ctx context.Context, req *DeactivateClientRequest) (*DeactivateClientResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeactivateClient not implemented")
}
func (*UnimplementedYorkieServiceServer) AttachDocument(ctx context.Context, req *AttachDocumentRequest) (*AttachDocumentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AttachDocument not implemented")
}
func (*UnimplementedYorkieServiceServer) DetachDocument(ctx context.Context, req *DetachDocumentRequest) (*DetachDocumentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DetachDocument not implemented")
}
func (*UnimplementedYorkieServiceServer) RemoveDocument(ctx context.Context, req *RemoveDocumentRequest) (*RemoveDocumentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveDocument not implemented")
}
func (*UnimplementedYorkieServiceServer) PushPullChanges(ctx context.Context, req *PushPullChangesRequest) (*PushPullChangesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PushPullChanges not implemented")
}
func (*UnimplementedYorkieServiceServer) WatchDocument(req *WatchDocumentRequest, srv YorkieService_WatchDocumentServer) error {
	return status.Errorf(codes.Unimplemented, "method WatchDocument not implemented")
}

func RegisterYorkieServiceServer(s *grpc.Server, srv YorkieServiceServer) {
	s.RegisterService(&_YorkieService_serviceDesc, srv)
}

func _YorkieService_ActivateClient_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ActivateClientRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YorkieServiceServer).ActivateClient(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yorkie.v1.YorkieService/ActivateClient",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YorkieServiceServer).ActivateClient(ctx, req.(*ActivateClientRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _YorkieService_DeactivateClient_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeactivateClientRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YorkieServiceServer).DeactivateClient(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yorkie.v1.YorkieService/DeactivateClient",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YorkieServiceServer).DeactivateClient(ctx, req.(*DeactivateClientRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _YorkieService_AttachDocument_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AttachDocumentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YorkieServiceServer).AttachDocument(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yorkie.v1.YorkieService/AttachDocument",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YorkieServiceServer).AttachDocument(ctx, req.(*AttachDocumentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _YorkieService_DetachDocument_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DetachDocumentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YorkieServiceServer).DetachDocument(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yorkie.v1.YorkieService/DetachDocument",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YorkieServiceServer).DetachDocument(ctx, req.(*DetachDocumentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _YorkieService_RemoveDocument_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveDocumentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YorkieServiceServer).RemoveDocument(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yorkie.v1.YorkieService/RemoveDocument",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YorkieServiceServer).RemoveDocument(ctx, req.(*RemoveDocumentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _YorkieService_PushPullChanges_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PushPullChangesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YorkieServiceServer).PushPullChanges(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yorkie.v1.YorkieService/PushPullChanges",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YorkieServiceServer).PushPullChanges(ctx, req.(*PushPullChangesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _YorkieService_WatchDocument_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(WatchDocumentRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(YorkieServiceServer).WatchDocument(m, &yorkieServiceWatchDocumentServer{stream})
}

type YorkieService_WatchDocumentServer interface {
	Send(*WatchDocumentResponse) error
	grpc.ServerStream
}

type yorkieServiceWatchDocumentServer struct {
	grpc.ServerStream
}

func (x *yorkieServiceWatchDocumentServer) Send(m *WatchDocumentResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _YorkieService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "yorkie.v1.YorkieService",
	HandlerType: (*YorkieServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ActivateClient",
			Handler:    _YorkieService_ActivateClient_Handler,
		},
		{
			MethodName: "DeactivateClient",
			Handler:    _YorkieService_DeactivateClient_Handler,
		},
		{
			MethodName: "AttachDocument",
			Handler:    _YorkieService_AttachDocument_Handler,
		},
		{
			MethodName: "DetachDocument",
			Handler:    _YorkieService_DetachDocument_Handler,
		},
		{
			MethodName: "RemoveDocument",
			Handler:    _YorkieService_RemoveDocument_Handler,
		},
		{
			MethodName: "PushPullChanges",
			Handler:    _YorkieService_PushPullChanges_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "WatchDocument",
			Handler:       _YorkieService_WatchDocument_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "yorkie/v1/yorkie.proto",
}

func (m *ActivateClientRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ActivateClientRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ActivateClientRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ClientKey) > 0 {
		i -= len(m.ClientKey)
		copy(dAtA[i:], m.ClientKey)
		i = encodeVarintYorkie(dAtA, i, uint64(len(m.ClientKey)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ActivateClientResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ActivateClientResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ActivateClientResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ClientId) > 0 {
		i -= len(m.ClientId)
		copy(dAtA[i:], m.ClientId)
		i = encodeVarintYorkie(dAtA, i, uint64(len(m.ClientId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *DeactivateClientRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DeactivateClientRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DeactivateClientRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ClientId) > 0 {
		i -= len(m.ClientId)
		copy(dAtA[i:], m.ClientId)
		i = encodeVarintYorkie(dAtA, i, uint64(len(m.ClientId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *DeactivateClientResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DeactivateClientResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DeactivateClientResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *AttachDocumentRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AttachDocumentRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AttachDocumentRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ChangePack != nil {
		{
			size, err := m.ChangePack.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintYorkie(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.ClientId) > 0 {
		i -= len(m.ClientId)
		copy(dAtA[i:], m.ClientId)
		i = encodeVarintYorkie(dAtA, i, uint64(len(m.ClientId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *AttachDocumentResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AttachDocumentResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AttachDocumentResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ChangePack != nil {
		{
			size, err := m.ChangePack.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintYorkie(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.DocumentId) > 0 {
		i -= len(m.DocumentId)
		copy(dAtA[i:], m.DocumentId)
		i = encodeVarintYorkie(dAtA, i, uint64(len(m.DocumentId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *DetachDocumentRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DetachDocumentRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DetachDocumentRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.RemoveIfNotAttached {
		i--
		if m.RemoveIfNotAttached {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if m.ChangePack != nil {
		{
			size, err := m.ChangePack.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintYorkie(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.DocumentId) > 0 {
		i -= len(m.DocumentId)
		copy(dAtA[i:], m.DocumentId)
		i = encodeVarintYorkie(dAtA, i, uint64(len(m.DocumentId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.ClientId) > 0 {
		i -= len(m.ClientId)
		copy(dAtA[i:], m.ClientId)
		i = encodeVarintYorkie(dAtA, i, uint64(len(m.ClientId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *DetachDocumentResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DetachDocumentResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DetachDocumentResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ChangePack != nil {
		{
			size, err := m.ChangePack.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintYorkie(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	return len(dAtA) - i, nil
}

func (m *WatchDocumentRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *WatchDocumentRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *WatchDocumentRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.DocumentId) > 0 {
		i -= len(m.DocumentId)
		copy(dAtA[i:], m.DocumentId)
		i = encodeVarintYorkie(dAtA, i, uint64(len(m.DocumentId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.ClientId) > 0 {
		i -= len(m.ClientId)
		copy(dAtA[i:], m.ClientId)
		i = encodeVarintYorkie(dAtA, i, uint64(len(m.ClientId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *WatchDocumentResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *WatchDocumentResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *WatchDocumentResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Body != nil {
		{
			size := m.Body.Size()
			i -= size
			if _, err := m.Body.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	return len(dAtA) - i, nil
}

func (m *WatchDocumentResponse_Initialization_) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *WatchDocumentResponse_Initialization_) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.Initialization != nil {
		{
			size, err := m.Initialization.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintYorkie(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}
func (m *WatchDocumentResponse_Event) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *WatchDocumentResponse_Event) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.Event != nil {
		{
			size, err := m.Event.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintYorkie(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	return len(dAtA) - i, nil
}
func (m *WatchDocumentResponse_Initialization) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *WatchDocumentResponse_Initialization) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *WatchDocumentResponse_Initialization) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ClientIds) > 0 {
		for iNdEx := len(m.ClientIds) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.ClientIds[iNdEx])
			copy(dAtA[i:], m.ClientIds[iNdEx])
			i = encodeVarintYorkie(dAtA, i, uint64(len(m.ClientIds[iNdEx])))
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *RemoveDocumentRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RemoveDocumentRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *RemoveDocumentRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ChangePack != nil {
		{
			size, err := m.ChangePack.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintYorkie(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.DocumentId) > 0 {
		i -= len(m.DocumentId)
		copy(dAtA[i:], m.DocumentId)
		i = encodeVarintYorkie(dAtA, i, uint64(len(m.DocumentId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.ClientId) > 0 {
		i -= len(m.ClientId)
		copy(dAtA[i:], m.ClientId)
		i = encodeVarintYorkie(dAtA, i, uint64(len(m.ClientId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *RemoveDocumentResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RemoveDocumentResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *RemoveDocumentResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ChangePack != nil {
		{
			size, err := m.ChangePack.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintYorkie(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *PushPullChangesRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PushPullChangesRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PushPullChangesRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.PushOnly {
		i--
		if m.PushOnly {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if m.ChangePack != nil {
		{
			size, err := m.ChangePack.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintYorkie(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.DocumentId) > 0 {
		i -= len(m.DocumentId)
		copy(dAtA[i:], m.DocumentId)
		i = encodeVarintYorkie(dAtA, i, uint64(len(m.DocumentId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.ClientId) > 0 {
		i -= len(m.ClientId)
		copy(dAtA[i:], m.ClientId)
		i = encodeVarintYorkie(dAtA, i, uint64(len(m.ClientId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *PushPullChangesResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PushPullChangesResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PushPullChangesResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ChangePack != nil {
		{
			size, err := m.ChangePack.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintYorkie(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintYorkie(dAtA []byte, offset int, v uint64) int {
	offset -= sovYorkie(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *ActivateClientRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ClientKey)
	if l > 0 {
		n += 1 + l + sovYorkie(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ActivateClientResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ClientId)
	if l > 0 {
		n += 1 + l + sovYorkie(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DeactivateClientRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ClientId)
	if l > 0 {
		n += 1 + l + sovYorkie(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DeactivateClientResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *AttachDocumentRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ClientId)
	if l > 0 {
		n += 1 + l + sovYorkie(uint64(l))
	}
	if m.ChangePack != nil {
		l = m.ChangePack.Size()
		n += 1 + l + sovYorkie(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *AttachDocumentResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.DocumentId)
	if l > 0 {
		n += 1 + l + sovYorkie(uint64(l))
	}
	if m.ChangePack != nil {
		l = m.ChangePack.Size()
		n += 1 + l + sovYorkie(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DetachDocumentRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ClientId)
	if l > 0 {
		n += 1 + l + sovYorkie(uint64(l))
	}
	l = len(m.DocumentId)
	if l > 0 {
		n += 1 + l + sovYorkie(uint64(l))
	}
	if m.ChangePack != nil {
		l = m.ChangePack.Size()
		n += 1 + l + sovYorkie(uint64(l))
	}
	if m.RemoveIfNotAttached {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DetachDocumentResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ChangePack != nil {
		l = m.ChangePack.Size()
		n += 1 + l + sovYorkie(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *WatchDocumentRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ClientId)
	if l > 0 {
		n += 1 + l + sovYorkie(uint64(l))
	}
	l = len(m.DocumentId)
	if l > 0 {
		n += 1 + l + sovYorkie(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *WatchDocumentResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Body != nil {
		n += m.Body.Size()
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *WatchDocumentResponse_Initialization_) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Initialization != nil {
		l = m.Initialization.Size()
		n += 1 + l + sovYorkie(uint64(l))
	}
	return n
}
func (m *WatchDocumentResponse_Event) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Event != nil {
		l = m.Event.Size()
		n += 1 + l + sovYorkie(uint64(l))
	}
	return n
}
func (m *WatchDocumentResponse_Initialization) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.ClientIds) > 0 {
		for _, s := range m.ClientIds {
			l = len(s)
			n += 1 + l + sovYorkie(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RemoveDocumentRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ClientId)
	if l > 0 {
		n += 1 + l + sovYorkie(uint64(l))
	}
	l = len(m.DocumentId)
	if l > 0 {
		n += 1 + l + sovYorkie(uint64(l))
	}
	if m.ChangePack != nil {
		l = m.ChangePack.Size()
		n += 1 + l + sovYorkie(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RemoveDocumentResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ChangePack != nil {
		l = m.ChangePack.Size()
		n += 1 + l + sovYorkie(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *PushPullChangesRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ClientId)
	if l > 0 {
		n += 1 + l + sovYorkie(uint64(l))
	}
	l = len(m.DocumentId)
	if l > 0 {
		n += 1 + l + sovYorkie(uint64(l))
	}
	if m.ChangePack != nil {
		l = m.ChangePack.Size()
		n += 1 + l + sovYorkie(uint64(l))
	}
	if m.PushOnly {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *PushPullChangesResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ChangePack != nil {
		l = m.ChangePack.Size()
		n += 1 + l + sovYorkie(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovYorkie(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozYorkie(x uint64) (n int) {
	return sovYorkie(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *ActivateClientRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowYorkie
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ActivateClientRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ActivateClientRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClientKey", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYorkie
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYorkie
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYorkie
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClientKey = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipYorkie(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthYorkie
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ActivateClientResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowYorkie
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ActivateClientResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ActivateClientResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClientId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYorkie
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYorkie
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYorkie
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClientId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipYorkie(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthYorkie
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DeactivateClientRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowYorkie
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DeactivateClientRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DeactivateClientRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClientId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYorkie
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYorkie
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYorkie
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClientId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipYorkie(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthYorkie
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DeactivateClientResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowYorkie
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DeactivateClientResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DeactivateClientResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipYorkie(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthYorkie
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AttachDocumentRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowYorkie
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AttachDocumentRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AttachDocumentRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClientId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYorkie
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYorkie
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYorkie
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClientId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChangePack", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYorkie
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYorkie
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYorkie
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ChangePack == nil {
				m.ChangePack = &ChangePack{}
			}
			if err := m.ChangePack.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipYorkie(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthYorkie
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AttachDocumentResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowYorkie
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AttachDocumentResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AttachDocumentResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DocumentId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYorkie
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYorkie
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYorkie
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DocumentId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChangePack", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYorkie
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYorkie
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYorkie
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ChangePack == nil {
				m.ChangePack = &ChangePack{}
			}
			if err := m.ChangePack.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipYorkie(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthYorkie
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DetachDocumentRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowYorkie
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DetachDocumentRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DetachDocumentRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClientId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYorkie
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYorkie
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYorkie
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClientId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DocumentId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYorkie
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYorkie
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYorkie
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DocumentId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChangePack", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYorkie
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYorkie
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYorkie
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ChangePack == nil {
				m.ChangePack = &ChangePack{}
			}
			if err := m.ChangePack.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RemoveIfNotAttached", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYorkie
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RemoveIfNotAttached = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipYorkie(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthYorkie
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DetachDocumentResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowYorkie
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DetachDocumentResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DetachDocumentResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChangePack", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYorkie
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYorkie
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYorkie
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ChangePack == nil {
				m.ChangePack = &ChangePack{}
			}
			if err := m.ChangePack.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipYorkie(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthYorkie
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *WatchDocumentRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowYorkie
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: WatchDocumentRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: WatchDocumentRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClientId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYorkie
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYorkie
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYorkie
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClientId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DocumentId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYorkie
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYorkie
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYorkie
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DocumentId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipYorkie(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthYorkie
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *WatchDocumentResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowYorkie
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: WatchDocumentResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: WatchDocumentResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Initialization", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYorkie
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYorkie
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYorkie
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &WatchDocumentResponse_Initialization{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Body = &WatchDocumentResponse_Initialization_{v}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Event", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYorkie
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYorkie
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYorkie
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &DocEvent{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Body = &WatchDocumentResponse_Event{v}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipYorkie(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthYorkie
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *WatchDocumentResponse_Initialization) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowYorkie
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Initialization: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Initialization: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClientIds", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYorkie
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYorkie
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYorkie
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClientIds = append(m.ClientIds, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipYorkie(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthYorkie
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RemoveDocumentRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowYorkie
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RemoveDocumentRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RemoveDocumentRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClientId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYorkie
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYorkie
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYorkie
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClientId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DocumentId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYorkie
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYorkie
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYorkie
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DocumentId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChangePack", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYorkie
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYorkie
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYorkie
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ChangePack == nil {
				m.ChangePack = &ChangePack{}
			}
			if err := m.ChangePack.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipYorkie(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthYorkie
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RemoveDocumentResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowYorkie
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RemoveDocumentResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RemoveDocumentResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChangePack", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYorkie
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYorkie
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYorkie
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ChangePack == nil {
				m.ChangePack = &ChangePack{}
			}
			if err := m.ChangePack.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipYorkie(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthYorkie
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PushPullChangesRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowYorkie
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PushPullChangesRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PushPullChangesRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClientId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYorkie
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYorkie
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYorkie
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClientId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DocumentId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYorkie
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYorkie
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYorkie
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DocumentId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChangePack", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYorkie
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYorkie
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYorkie
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ChangePack == nil {
				m.ChangePack = &ChangePack{}
			}
			if err := m.ChangePack.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PushOnly", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYorkie
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PushOnly = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipYorkie(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthYorkie
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PushPullChangesResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowYorkie
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PushPullChangesResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PushPullChangesResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChangePack", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYorkie
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYorkie
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYorkie
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ChangePack == nil {
				m.ChangePack = &ChangePack{}
			}
			if err := m.ChangePack.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipYorkie(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthYorkie
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipYorkie(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowYorkie
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowYorkie
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowYorkie
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthYorkie
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupYorkie
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthYorkie
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthYorkie        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowYorkie          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupYorkie = fmt.Errorf("proto: unexpected end of group")
)
