// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: yorkie.proto

package api

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ActivateClientRequest struct {
	ClientKey            string   `protobuf:"bytes,1,opt,name=client_key,json=clientKey,proto3" json:"client_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ActivateClientRequest) Reset()         { *m = ActivateClientRequest{} }
func (m *ActivateClientRequest) String() string { return proto.CompactTextString(m) }
func (*ActivateClientRequest) ProtoMessage()    {}
func (*ActivateClientRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b60f170c5b305914, []int{0}
}
func (m *ActivateClientRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ActivateClientRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ActivateClientRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ActivateClientRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivateClientRequest.Merge(m, src)
}
func (m *ActivateClientRequest) XXX_Size() int {
	return m.Size()
}
func (m *ActivateClientRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivateClientRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ActivateClientRequest proto.InternalMessageInfo

func (m *ActivateClientRequest) GetClientKey() string {
	if m != nil {
		return m.ClientKey
	}
	return ""
}

type ActivateClientResponse struct {
	ClientKey            string   `protobuf:"bytes,1,opt,name=client_key,json=clientKey,proto3" json:"client_key,omitempty"`
	ClientId             []byte   `protobuf:"bytes,2,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ActivateClientResponse) Reset()         { *m = ActivateClientResponse{} }
func (m *ActivateClientResponse) String() string { return proto.CompactTextString(m) }
func (*ActivateClientResponse) ProtoMessage()    {}
func (*ActivateClientResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b60f170c5b305914, []int{1}
}
func (m *ActivateClientResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ActivateClientResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ActivateClientResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ActivateClientResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivateClientResponse.Merge(m, src)
}
func (m *ActivateClientResponse) XXX_Size() int {
	return m.Size()
}
func (m *ActivateClientResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivateClientResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ActivateClientResponse proto.InternalMessageInfo

func (m *ActivateClientResponse) GetClientKey() string {
	if m != nil {
		return m.ClientKey
	}
	return ""
}

func (m *ActivateClientResponse) GetClientId() []byte {
	if m != nil {
		return m.ClientId
	}
	return nil
}

type DeactivateClientRequest struct {
	ClientId             []byte   `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeactivateClientRequest) Reset()         { *m = DeactivateClientRequest{} }
func (m *DeactivateClientRequest) String() string { return proto.CompactTextString(m) }
func (*DeactivateClientRequest) ProtoMessage()    {}
func (*DeactivateClientRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b60f170c5b305914, []int{2}
}
func (m *DeactivateClientRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DeactivateClientRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DeactivateClientRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DeactivateClientRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeactivateClientRequest.Merge(m, src)
}
func (m *DeactivateClientRequest) XXX_Size() int {
	return m.Size()
}
func (m *DeactivateClientRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeactivateClientRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeactivateClientRequest proto.InternalMessageInfo

func (m *DeactivateClientRequest) GetClientId() []byte {
	if m != nil {
		return m.ClientId
	}
	return nil
}

type DeactivateClientResponse struct {
	ClientId             []byte   `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeactivateClientResponse) Reset()         { *m = DeactivateClientResponse{} }
func (m *DeactivateClientResponse) String() string { return proto.CompactTextString(m) }
func (*DeactivateClientResponse) ProtoMessage()    {}
func (*DeactivateClientResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b60f170c5b305914, []int{3}
}
func (m *DeactivateClientResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DeactivateClientResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DeactivateClientResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DeactivateClientResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeactivateClientResponse.Merge(m, src)
}
func (m *DeactivateClientResponse) XXX_Size() int {
	return m.Size()
}
func (m *DeactivateClientResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeactivateClientResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeactivateClientResponse proto.InternalMessageInfo

func (m *DeactivateClientResponse) GetClientId() []byte {
	if m != nil {
		return m.ClientId
	}
	return nil
}

type AttachDocumentRequest struct {
	ClientId             []byte      `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	ChangePack           *ChangePack `protobuf:"bytes,2,opt,name=change_pack,json=changePack,proto3" json:"change_pack,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *AttachDocumentRequest) Reset()         { *m = AttachDocumentRequest{} }
func (m *AttachDocumentRequest) String() string { return proto.CompactTextString(m) }
func (*AttachDocumentRequest) ProtoMessage()    {}
func (*AttachDocumentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b60f170c5b305914, []int{4}
}
func (m *AttachDocumentRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AttachDocumentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AttachDocumentRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AttachDocumentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AttachDocumentRequest.Merge(m, src)
}
func (m *AttachDocumentRequest) XXX_Size() int {
	return m.Size()
}
func (m *AttachDocumentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AttachDocumentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AttachDocumentRequest proto.InternalMessageInfo

func (m *AttachDocumentRequest) GetClientId() []byte {
	if m != nil {
		return m.ClientId
	}
	return nil
}

func (m *AttachDocumentRequest) GetChangePack() *ChangePack {
	if m != nil {
		return m.ChangePack
	}
	return nil
}

type AttachDocumentResponse struct {
	ClientId             []byte      `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	ChangePack           *ChangePack `protobuf:"bytes,2,opt,name=change_pack,json=changePack,proto3" json:"change_pack,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *AttachDocumentResponse) Reset()         { *m = AttachDocumentResponse{} }
func (m *AttachDocumentResponse) String() string { return proto.CompactTextString(m) }
func (*AttachDocumentResponse) ProtoMessage()    {}
func (*AttachDocumentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b60f170c5b305914, []int{5}
}
func (m *AttachDocumentResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AttachDocumentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AttachDocumentResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AttachDocumentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AttachDocumentResponse.Merge(m, src)
}
func (m *AttachDocumentResponse) XXX_Size() int {
	return m.Size()
}
func (m *AttachDocumentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AttachDocumentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AttachDocumentResponse proto.InternalMessageInfo

func (m *AttachDocumentResponse) GetClientId() []byte {
	if m != nil {
		return m.ClientId
	}
	return nil
}

func (m *AttachDocumentResponse) GetChangePack() *ChangePack {
	if m != nil {
		return m.ChangePack
	}
	return nil
}

type DetachDocumentRequest struct {
	ClientId             []byte      `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	ChangePack           *ChangePack `protobuf:"bytes,2,opt,name=change_pack,json=changePack,proto3" json:"change_pack,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *DetachDocumentRequest) Reset()         { *m = DetachDocumentRequest{} }
func (m *DetachDocumentRequest) String() string { return proto.CompactTextString(m) }
func (*DetachDocumentRequest) ProtoMessage()    {}
func (*DetachDocumentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b60f170c5b305914, []int{6}
}
func (m *DetachDocumentRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DetachDocumentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DetachDocumentRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DetachDocumentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DetachDocumentRequest.Merge(m, src)
}
func (m *DetachDocumentRequest) XXX_Size() int {
	return m.Size()
}
func (m *DetachDocumentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DetachDocumentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DetachDocumentRequest proto.InternalMessageInfo

func (m *DetachDocumentRequest) GetClientId() []byte {
	if m != nil {
		return m.ClientId
	}
	return nil
}

func (m *DetachDocumentRequest) GetChangePack() *ChangePack {
	if m != nil {
		return m.ChangePack
	}
	return nil
}

type DetachDocumentResponse struct {
	ClientKey            string      `protobuf:"bytes,1,opt,name=client_key,json=clientKey,proto3" json:"client_key,omitempty"`
	ChangePack           *ChangePack `protobuf:"bytes,2,opt,name=change_pack,json=changePack,proto3" json:"change_pack,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *DetachDocumentResponse) Reset()         { *m = DetachDocumentResponse{} }
func (m *DetachDocumentResponse) String() string { return proto.CompactTextString(m) }
func (*DetachDocumentResponse) ProtoMessage()    {}
func (*DetachDocumentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b60f170c5b305914, []int{7}
}
func (m *DetachDocumentResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DetachDocumentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DetachDocumentResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DetachDocumentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DetachDocumentResponse.Merge(m, src)
}
func (m *DetachDocumentResponse) XXX_Size() int {
	return m.Size()
}
func (m *DetachDocumentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DetachDocumentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DetachDocumentResponse proto.InternalMessageInfo

func (m *DetachDocumentResponse) GetClientKey() string {
	if m != nil {
		return m.ClientKey
	}
	return ""
}

func (m *DetachDocumentResponse) GetChangePack() *ChangePack {
	if m != nil {
		return m.ChangePack
	}
	return nil
}

type WatchDocumentsRequest struct {
	Client               *Client  `protobuf:"bytes,1,opt,name=client,proto3" json:"client,omitempty"`
	DocumentKeys         []string `protobuf:"bytes,2,rep,name=document_keys,json=documentKeys,proto3" json:"document_keys,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WatchDocumentsRequest) Reset()         { *m = WatchDocumentsRequest{} }
func (m *WatchDocumentsRequest) String() string { return proto.CompactTextString(m) }
func (*WatchDocumentsRequest) ProtoMessage()    {}
func (*WatchDocumentsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b60f170c5b305914, []int{8}
}
func (m *WatchDocumentsRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *WatchDocumentsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_WatchDocumentsRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *WatchDocumentsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WatchDocumentsRequest.Merge(m, src)
}
func (m *WatchDocumentsRequest) XXX_Size() int {
	return m.Size()
}
func (m *WatchDocumentsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WatchDocumentsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WatchDocumentsRequest proto.InternalMessageInfo

func (m *WatchDocumentsRequest) GetClient() *Client {
	if m != nil {
		return m.Client
	}
	return nil
}

func (m *WatchDocumentsRequest) GetDocumentKeys() []string {
	if m != nil {
		return m.DocumentKeys
	}
	return nil
}

type WatchDocumentsResponse struct {
	// Types that are valid to be assigned to Body:
	//	*WatchDocumentsResponse_Initialization_
	//	*WatchDocumentsResponse_Event
	Body                 isWatchDocumentsResponse_Body `protobuf_oneof:"body"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *WatchDocumentsResponse) Reset()         { *m = WatchDocumentsResponse{} }
func (m *WatchDocumentsResponse) String() string { return proto.CompactTextString(m) }
func (*WatchDocumentsResponse) ProtoMessage()    {}
func (*WatchDocumentsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b60f170c5b305914, []int{9}
}
func (m *WatchDocumentsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *WatchDocumentsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_WatchDocumentsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *WatchDocumentsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WatchDocumentsResponse.Merge(m, src)
}
func (m *WatchDocumentsResponse) XXX_Size() int {
	return m.Size()
}
func (m *WatchDocumentsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_WatchDocumentsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_WatchDocumentsResponse proto.InternalMessageInfo

type isWatchDocumentsResponse_Body interface {
	isWatchDocumentsResponse_Body()
	MarshalTo([]byte) (int, error)
	Size() int
}

type WatchDocumentsResponse_Initialization_ struct {
	Initialization *WatchDocumentsResponse_Initialization `protobuf:"bytes,1,opt,name=initialization,proto3,oneof" json:"initialization,omitempty"`
}
type WatchDocumentsResponse_Event struct {
	Event *DocEvent `protobuf:"bytes,2,opt,name=event,proto3,oneof" json:"event,omitempty"`
}

func (*WatchDocumentsResponse_Initialization_) isWatchDocumentsResponse_Body() {}
func (*WatchDocumentsResponse_Event) isWatchDocumentsResponse_Body()           {}

func (m *WatchDocumentsResponse) GetBody() isWatchDocumentsResponse_Body {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *WatchDocumentsResponse) GetInitialization() *WatchDocumentsResponse_Initialization {
	if x, ok := m.GetBody().(*WatchDocumentsResponse_Initialization_); ok {
		return x.Initialization
	}
	return nil
}

func (m *WatchDocumentsResponse) GetEvent() *DocEvent {
	if x, ok := m.GetBody().(*WatchDocumentsResponse_Event); ok {
		return x.Event
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*WatchDocumentsResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*WatchDocumentsResponse_Initialization_)(nil),
		(*WatchDocumentsResponse_Event)(nil),
	}
}

type WatchDocumentsResponse_Initialization struct {
	PeersMapByDoc        map[string]*Clients `protobuf:"bytes,1,rep,name=peers_map_by_doc,json=peersMapByDoc,proto3" json:"peers_map_by_doc,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *WatchDocumentsResponse_Initialization) Reset()         { *m = WatchDocumentsResponse_Initialization{} }
func (m *WatchDocumentsResponse_Initialization) String() string { return proto.CompactTextString(m) }
func (*WatchDocumentsResponse_Initialization) ProtoMessage()    {}
func (*WatchDocumentsResponse_Initialization) Descriptor() ([]byte, []int) {
	return fileDescriptor_b60f170c5b305914, []int{9, 0}
}
func (m *WatchDocumentsResponse_Initialization) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *WatchDocumentsResponse_Initialization) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_WatchDocumentsResponse_Initialization.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *WatchDocumentsResponse_Initialization) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WatchDocumentsResponse_Initialization.Merge(m, src)
}
func (m *WatchDocumentsResponse_Initialization) XXX_Size() int {
	return m.Size()
}
func (m *WatchDocumentsResponse_Initialization) XXX_DiscardUnknown() {
	xxx_messageInfo_WatchDocumentsResponse_Initialization.DiscardUnknown(m)
}

var xxx_messageInfo_WatchDocumentsResponse_Initialization proto.InternalMessageInfo

func (m *WatchDocumentsResponse_Initialization) GetPeersMapByDoc() map[string]*Clients {
	if m != nil {
		return m.PeersMapByDoc
	}
	return nil
}

type PushPullRequest struct {
	ClientId             []byte      `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	ChangePack           *ChangePack `protobuf:"bytes,2,opt,name=change_pack,json=changePack,proto3" json:"change_pack,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *PushPullRequest) Reset()         { *m = PushPullRequest{} }
func (m *PushPullRequest) String() string { return proto.CompactTextString(m) }
func (*PushPullRequest) ProtoMessage()    {}
func (*PushPullRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b60f170c5b305914, []int{10}
}
func (m *PushPullRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PushPullRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PushPullRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PushPullRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushPullRequest.Merge(m, src)
}
func (m *PushPullRequest) XXX_Size() int {
	return m.Size()
}
func (m *PushPullRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PushPullRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PushPullRequest proto.InternalMessageInfo

func (m *PushPullRequest) GetClientId() []byte {
	if m != nil {
		return m.ClientId
	}
	return nil
}

func (m *PushPullRequest) GetChangePack() *ChangePack {
	if m != nil {
		return m.ChangePack
	}
	return nil
}

type PushPullResponse struct {
	ClientId             []byte      `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	ChangePack           *ChangePack `protobuf:"bytes,2,opt,name=change_pack,json=changePack,proto3" json:"change_pack,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *PushPullResponse) Reset()         { *m = PushPullResponse{} }
func (m *PushPullResponse) String() string { return proto.CompactTextString(m) }
func (*PushPullResponse) ProtoMessage()    {}
func (*PushPullResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b60f170c5b305914, []int{11}
}
func (m *PushPullResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PushPullResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PushPullResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PushPullResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushPullResponse.Merge(m, src)
}
func (m *PushPullResponse) XXX_Size() int {
	return m.Size()
}
func (m *PushPullResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PushPullResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PushPullResponse proto.InternalMessageInfo

func (m *PushPullResponse) GetClientId() []byte {
	if m != nil {
		return m.ClientId
	}
	return nil
}

func (m *PushPullResponse) GetChangePack() *ChangePack {
	if m != nil {
		return m.ChangePack
	}
	return nil
}

type UpdatePresenceRequest struct {
	Client               *Client  `protobuf:"bytes,1,opt,name=client,proto3" json:"client,omitempty"`
	DocumentKeys         []string `protobuf:"bytes,2,rep,name=document_keys,json=documentKeys,proto3" json:"document_keys,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdatePresenceRequest) Reset()         { *m = UpdatePresenceRequest{} }
func (m *UpdatePresenceRequest) String() string { return proto.CompactTextString(m) }
func (*UpdatePresenceRequest) ProtoMessage()    {}
func (*UpdatePresenceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b60f170c5b305914, []int{12}
}
func (m *UpdatePresenceRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UpdatePresenceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UpdatePresenceRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UpdatePresenceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdatePresenceRequest.Merge(m, src)
}
func (m *UpdatePresenceRequest) XXX_Size() int {
	return m.Size()
}
func (m *UpdatePresenceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdatePresenceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdatePresenceRequest proto.InternalMessageInfo

func (m *UpdatePresenceRequest) GetClient() *Client {
	if m != nil {
		return m.Client
	}
	return nil
}

func (m *UpdatePresenceRequest) GetDocumentKeys() []string {
	if m != nil {
		return m.DocumentKeys
	}
	return nil
}

type UpdatePresenceResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdatePresenceResponse) Reset()         { *m = UpdatePresenceResponse{} }
func (m *UpdatePresenceResponse) String() string { return proto.CompactTextString(m) }
func (*UpdatePresenceResponse) ProtoMessage()    {}
func (*UpdatePresenceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b60f170c5b305914, []int{13}
}
func (m *UpdatePresenceResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UpdatePresenceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UpdatePresenceResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UpdatePresenceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdatePresenceResponse.Merge(m, src)
}
func (m *UpdatePresenceResponse) XXX_Size() int {
	return m.Size()
}
func (m *UpdatePresenceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdatePresenceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdatePresenceResponse proto.InternalMessageInfo

type ListChangesRequest struct {
	ClientId             []byte   `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	DocumentKey          string   `protobuf:"bytes,2,opt,name=document_key,json=documentKey,proto3" json:"document_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListChangesRequest) Reset()         { *m = ListChangesRequest{} }
func (m *ListChangesRequest) String() string { return proto.CompactTextString(m) }
func (*ListChangesRequest) ProtoMessage()    {}
func (*ListChangesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b60f170c5b305914, []int{14}
}
func (m *ListChangesRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListChangesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListChangesRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListChangesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListChangesRequest.Merge(m, src)
}
func (m *ListChangesRequest) XXX_Size() int {
	return m.Size()
}
func (m *ListChangesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListChangesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListChangesRequest proto.InternalMessageInfo

func (m *ListChangesRequest) GetClientId() []byte {
	if m != nil {
		return m.ClientId
	}
	return nil
}

func (m *ListChangesRequest) GetDocumentKey() string {
	if m != nil {
		return m.DocumentKey
	}
	return ""
}

type ListChangesResponse struct {
	Changes              []*Change `protobuf:"bytes,1,rep,name=changes,proto3" json:"changes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ListChangesResponse) Reset()         { *m = ListChangesResponse{} }
func (m *ListChangesResponse) String() string { return proto.CompactTextString(m) }
func (*ListChangesResponse) ProtoMessage()    {}
func (*ListChangesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b60f170c5b305914, []int{15}
}
func (m *ListChangesResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListChangesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListChangesResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListChangesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListChangesResponse.Merge(m, src)
}
func (m *ListChangesResponse) XXX_Size() int {
	return m.Size()
}
func (m *ListChangesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListChangesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListChangesResponse proto.InternalMessageInfo

func (m *ListChangesResponse) GetChanges() []*Change {
	if m != nil {
		return m.Changes
	}
	return nil
}

func init() {
	proto.RegisterType((*ActivateClientRequest)(nil), "api.ActivateClientRequest")
	proto.RegisterType((*ActivateClientResponse)(nil), "api.ActivateClientResponse")
	proto.RegisterType((*DeactivateClientRequest)(nil), "api.DeactivateClientRequest")
	proto.RegisterType((*DeactivateClientResponse)(nil), "api.DeactivateClientResponse")
	proto.RegisterType((*AttachDocumentRequest)(nil), "api.AttachDocumentRequest")
	proto.RegisterType((*AttachDocumentResponse)(nil), "api.AttachDocumentResponse")
	proto.RegisterType((*DetachDocumentRequest)(nil), "api.DetachDocumentRequest")
	proto.RegisterType((*DetachDocumentResponse)(nil), "api.DetachDocumentResponse")
	proto.RegisterType((*WatchDocumentsRequest)(nil), "api.WatchDocumentsRequest")
	proto.RegisterType((*WatchDocumentsResponse)(nil), "api.WatchDocumentsResponse")
	proto.RegisterType((*WatchDocumentsResponse_Initialization)(nil), "api.WatchDocumentsResponse.Initialization")
	proto.RegisterMapType((map[string]*Clients)(nil), "api.WatchDocumentsResponse.Initialization.PeersMapByDocEntry")
	proto.RegisterType((*PushPullRequest)(nil), "api.PushPullRequest")
	proto.RegisterType((*PushPullResponse)(nil), "api.PushPullResponse")
	proto.RegisterType((*UpdatePresenceRequest)(nil), "api.UpdatePresenceRequest")
	proto.RegisterType((*UpdatePresenceResponse)(nil), "api.UpdatePresenceResponse")
	proto.RegisterType((*ListChangesRequest)(nil), "api.ListChangesRequest")
	proto.RegisterType((*ListChangesResponse)(nil), "api.ListChangesResponse")
}

func init() { proto.RegisterFile("yorkie.proto", fileDescriptor_b60f170c5b305914) }

var fileDescriptor_b60f170c5b305914 = []byte{
	// 703 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x56, 0xcd, 0x6e, 0xd3, 0x40,
	0x10, 0x8e, 0x93, 0x36, 0x34, 0xe3, 0x34, 0x8d, 0x16, 0x92, 0x5a, 0x2e, 0x8d, 0x82, 0xab, 0x4a,
	0x11, 0x87, 0xa8, 0x0a, 0x52, 0xf9, 0x11, 0x1c, 0x9a, 0x06, 0xa9, 0x55, 0x28, 0x0a, 0x56, 0x11,
	0xe2, 0x14, 0xb6, 0xce, 0xb6, 0x5d, 0x25, 0xb5, 0x8d, 0x77, 0x53, 0xc9, 0x3c, 0x09, 0x8f, 0xd4,
	0x23, 0x2f, 0x80, 0x84, 0xca, 0x85, 0xc7, 0x40, 0xd9, 0x5d, 0xb7, 0xb1, 0xe3, 0x42, 0x40, 0x94,
	0x9b, 0x33, 0xb3, 0xf3, 0x7d, 0xf3, 0xed, 0xcc, 0xce, 0x04, 0x8a, 0xa1, 0x17, 0x0c, 0x29, 0x69,
	0xfa, 0x81, 0xc7, 0x3d, 0x94, 0xc3, 0x3e, 0x35, 0x57, 0x02, 0xc2, 0xbc, 0x71, 0xe0, 0x10, 0x26,
	0xad, 0xd6, 0x36, 0x54, 0x76, 0x1c, 0x4e, 0xcf, 0x31, 0x27, 0xbb, 0x23, 0x4a, 0x5c, 0x6e, 0x93,
	0x8f, 0x63, 0xc2, 0x38, 0x5a, 0x07, 0x70, 0x84, 0xa1, 0x3f, 0x24, 0xa1, 0xa1, 0xd5, 0xb5, 0x46,
	0xc1, 0x2e, 0x48, 0x4b, 0x97, 0x84, 0xd6, 0x21, 0x54, 0x93, 0x71, 0xcc, 0xf7, 0x5c, 0x46, 0x7e,
	0x13, 0x88, 0xd6, 0x40, 0xfd, 0xe8, 0xd3, 0x81, 0x91, 0xad, 0x6b, 0x8d, 0xa2, 0xbd, 0x24, 0x0d,
	0xfb, 0x03, 0x6b, 0x1b, 0x56, 0x3b, 0x04, 0xa7, 0xe6, 0x13, 0x8b, 0xd3, 0x12, 0x71, 0x8f, 0xc1,
	0x98, 0x8d, 0x53, 0xf9, 0xfc, 0x32, 0xf0, 0x18, 0x2a, 0x3b, 0x9c, 0x63, 0xe7, 0xb4, 0xe3, 0x39,
	0xe3, 0xb3, 0x39, 0xe9, 0xd0, 0x16, 0xe8, 0xce, 0x29, 0x76, 0x4f, 0x48, 0xdf, 0xc7, 0xce, 0x50,
	0xa8, 0xd0, 0x5b, 0x2b, 0x4d, 0xec, 0xd3, 0xe6, 0xae, 0xb0, 0xf7, 0xb0, 0x33, 0xb4, 0xc1, 0xb9,
	0xfa, 0xb6, 0x4e, 0xa0, 0x9a, 0xe4, 0x99, 0x23, 0xbd, 0xbf, 0x20, 0x3a, 0x86, 0x4a, 0x87, 0xfc,
	0x07, 0x41, 0x14, 0xaa, 0x49, 0x9e, 0xf9, 0xea, 0xff, 0xe7, 0x54, 0x18, 0x2a, 0xef, 0x30, 0xbf,
	0x66, 0x62, 0x91, 0xa4, 0x0d, 0xc8, 0x4b, 0x5c, 0xc1, 0xa2, 0xb7, 0x74, 0x89, 0x22, 0xcb, 0xaf,
	0x5c, 0x68, 0x03, 0x96, 0x07, 0x2a, 0x70, 0x92, 0x10, 0x33, 0xb2, 0xf5, 0x5c, 0xa3, 0x60, 0x17,
	0x23, 0x63, 0x97, 0x84, 0xcc, 0xfa, 0x91, 0x85, 0x6a, 0x92, 0x43, 0xc9, 0x39, 0x84, 0x12, 0x75,
	0x29, 0xa7, 0x78, 0x44, 0x3f, 0x61, 0x4e, 0x3d, 0x57, 0x91, 0x3d, 0x14, 0x64, 0xe9, 0x41, 0xcd,
	0xfd, 0x58, 0xc4, 0x5e, 0xc6, 0x4e, 0x60, 0xa0, 0x4d, 0x58, 0x24, 0xe7, 0x93, 0xcc, 0xa5, 0xfe,
	0x65, 0x01, 0xd6, 0xf1, 0x9c, 0x97, 0x13, 0xe3, 0x5e, 0xc6, 0x96, 0x5e, 0xf3, 0x42, 0x83, 0x52,
	0x1c, 0x0b, 0x1d, 0x43, 0xd9, 0x27, 0x24, 0x60, 0xfd, 0x33, 0xec, 0xf7, 0x8f, 0xc2, 0xfe, 0xc0,
	0x73, 0x0c, 0xad, 0x9e, 0x6b, 0xe8, 0xad, 0x17, 0xf3, 0x67, 0xd4, 0xec, 0x4d, 0x20, 0x0e, 0xb0,
	0xdf, 0x0e, 0x27, 0xa4, 0x2e, 0x0f, 0x42, 0x7b, 0xd9, 0x9f, 0xb6, 0x99, 0xaf, 0x01, 0xcd, 0x1e,
	0x42, 0x65, 0xc8, 0x5d, 0x57, 0x75, 0xf2, 0x89, 0x2c, 0x58, 0x3c, 0xc7, 0xa3, 0x31, 0x51, 0x4a,
	0x8a, 0x53, 0x35, 0x60, 0xb6, 0x74, 0x3d, 0xcb, 0x3e, 0xd1, 0xda, 0x79, 0x58, 0x38, 0xf2, 0x06,
	0xa1, 0xf5, 0x01, 0x56, 0x7a, 0x63, 0x76, 0xda, 0x1b, 0x8f, 0x46, 0xb7, 0xd4, 0x9a, 0x18, 0xca,
	0xd7, 0x0c, 0xb7, 0xf3, 0xca, 0x30, 0x54, 0xde, 0xfa, 0x03, 0xcc, 0x49, 0x2f, 0x20, 0x8c, 0xb8,
	0x0e, 0xf9, 0xf7, 0x2d, 0x69, 0x40, 0x35, 0x49, 0x21, 0xb5, 0x58, 0x87, 0x80, 0x5e, 0x51, 0xc6,
	0x65, 0x6a, 0x6c, 0xae, 0x4b, 0x7c, 0x00, 0xc5, 0x69, 0x46, 0x21, 0xb1, 0x60, 0xeb, 0x53, 0x84,
	0xd6, 0x73, 0xb8, 0x1b, 0x43, 0x55, 0x17, 0xb7, 0x09, 0x77, 0xa4, 0x6e, 0xa6, 0xba, 0x4c, 0x9f,
	0xba, 0x17, 0x3b, 0xf2, 0xb5, 0xbe, 0x2e, 0x40, 0xfe, 0xbd, 0xd8, 0x36, 0xa8, 0x0b, 0xa5, 0xf8,
	0x66, 0x40, 0xa6, 0x08, 0x49, 0x5d, 0x33, 0xe6, 0x5a, 0xaa, 0x4f, 0x29, 0xcd, 0xa0, 0x37, 0x50,
	0x4e, 0x0e, 0x76, 0x74, 0x5f, 0x3e, 0x96, 0xf4, 0x3d, 0x61, 0xae, 0xdf, 0xe0, 0xbd, 0x82, 0xec,
	0x42, 0x29, 0x7e, 0xb1, 0x2a, 0xbf, 0xd4, 0x82, 0xaa, 0xfc, 0x6e, 0xa8, 0x84, 0x00, 0x8b, 0xcf,
	0xf5, 0x48, 0x6c, 0xda, 0x52, 0x89, 0xc4, 0xa6, 0x2e, 0x02, 0x09, 0x16, 0x9f, 0xa9, 0x0a, 0x2c,
	0x75, 0xa0, 0x2b, 0xb0, 0xf4, 0x21, 0x6c, 0x65, 0xd0, 0x01, 0x94, 0xe2, 0xa3, 0x40, 0x81, 0xa5,
	0x8e, 0x52, 0x05, 0x96, 0x3e, 0x3b, 0xac, 0xcc, 0x96, 0x86, 0x9e, 0xc2, 0x52, 0xf4, 0xa8, 0xd0,
	0x3d, 0x71, 0x38, 0xf1, 0x8a, 0xcd, 0x4a, 0xc2, 0x7a, 0x95, 0x49, 0x1b, 0xf4, 0xa9, 0xce, 0x42,
	0xab, 0xe2, 0xdc, 0x6c, 0x07, 0x9b, 0xc6, 0xac, 0x23, 0xc2, 0x68, 0x97, 0x2f, 0x2e, 0x6b, 0xda,
	0x97, 0xcb, 0x9a, 0xf6, 0xed, 0xb2, 0xa6, 0x7d, 0xfe, 0x5e, 0xcb, 0x1c, 0xe5, 0xc5, 0xff, 0x97,
	0x47, 0x3f, 0x03, 0x00, 0x00, 0xff, 0xff, 0xb8, 0xda, 0xf3, 0xdb, 0xe5, 0x08, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// YorkieClient is the client API for Yorkie service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type YorkieClient interface {
	ActivateClient(ctx context.Context, in *ActivateClientRequest, opts ...grpc.CallOption) (*ActivateClientResponse, error)
	DeactivateClient(ctx context.Context, in *DeactivateClientRequest, opts ...grpc.CallOption) (*DeactivateClientResponse, error)
	UpdatePresence(ctx context.Context, in *UpdatePresenceRequest, opts ...grpc.CallOption) (*UpdatePresenceResponse, error)
	AttachDocument(ctx context.Context, in *AttachDocumentRequest, opts ...grpc.CallOption) (*AttachDocumentResponse, error)
	DetachDocument(ctx context.Context, in *DetachDocumentRequest, opts ...grpc.CallOption) (*DetachDocumentResponse, error)
	WatchDocuments(ctx context.Context, in *WatchDocumentsRequest, opts ...grpc.CallOption) (Yorkie_WatchDocumentsClient, error)
	PushPull(ctx context.Context, in *PushPullRequest, opts ...grpc.CallOption) (*PushPullResponse, error)
	ListChanges(ctx context.Context, in *ListChangesRequest, opts ...grpc.CallOption) (*ListChangesResponse, error)
}

type yorkieClient struct {
	cc *grpc.ClientConn
}

func NewYorkieClient(cc *grpc.ClientConn) YorkieClient {
	return &yorkieClient{cc}
}

func (c *yorkieClient) ActivateClient(ctx context.Context, in *ActivateClientRequest, opts ...grpc.CallOption) (*ActivateClientResponse, error) {
	out := new(ActivateClientResponse)
	err := c.cc.Invoke(ctx, "/api.Yorkie/ActivateClient", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yorkieClient) DeactivateClient(ctx context.Context, in *DeactivateClientRequest, opts ...grpc.CallOption) (*DeactivateClientResponse, error) {
	out := new(DeactivateClientResponse)
	err := c.cc.Invoke(ctx, "/api.Yorkie/DeactivateClient", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yorkieClient) UpdatePresence(ctx context.Context, in *UpdatePresenceRequest, opts ...grpc.CallOption) (*UpdatePresenceResponse, error) {
	out := new(UpdatePresenceResponse)
	err := c.cc.Invoke(ctx, "/api.Yorkie/UpdatePresence", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yorkieClient) AttachDocument(ctx context.Context, in *AttachDocumentRequest, opts ...grpc.CallOption) (*AttachDocumentResponse, error) {
	out := new(AttachDocumentResponse)
	err := c.cc.Invoke(ctx, "/api.Yorkie/AttachDocument", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yorkieClient) DetachDocument(ctx context.Context, in *DetachDocumentRequest, opts ...grpc.CallOption) (*DetachDocumentResponse, error) {
	out := new(DetachDocumentResponse)
	err := c.cc.Invoke(ctx, "/api.Yorkie/DetachDocument", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yorkieClient) WatchDocuments(ctx context.Context, in *WatchDocumentsRequest, opts ...grpc.CallOption) (Yorkie_WatchDocumentsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Yorkie_serviceDesc.Streams[0], "/api.Yorkie/WatchDocuments", opts...)
	if err != nil {
		return nil, err
	}
	x := &yorkieWatchDocumentsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Yorkie_WatchDocumentsClient interface {
	Recv() (*WatchDocumentsResponse, error)
	grpc.ClientStream
}

type yorkieWatchDocumentsClient struct {
	grpc.ClientStream
}

func (x *yorkieWatchDocumentsClient) Recv() (*WatchDocumentsResponse, error) {
	m := new(WatchDocumentsResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *yorkieClient) PushPull(ctx context.Context, in *PushPullRequest, opts ...grpc.CallOption) (*PushPullResponse, error) {
	out := new(PushPullResponse)
	err := c.cc.Invoke(ctx, "/api.Yorkie/PushPull", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yorkieClient) ListChanges(ctx context.Context, in *ListChangesRequest, opts ...grpc.CallOption) (*ListChangesResponse, error) {
	out := new(ListChangesResponse)
	err := c.cc.Invoke(ctx, "/api.Yorkie/ListChanges", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// YorkieServer is the server API for Yorkie service.
type YorkieServer interface {
	ActivateClient(context.Context, *ActivateClientRequest) (*ActivateClientResponse, error)
	DeactivateClient(context.Context, *DeactivateClientRequest) (*DeactivateClientResponse, error)
	UpdatePresence(context.Context, *UpdatePresenceRequest) (*UpdatePresenceResponse, error)
	AttachDocument(context.Context, *AttachDocumentRequest) (*AttachDocumentResponse, error)
	DetachDocument(context.Context, *DetachDocumentRequest) (*DetachDocumentResponse, error)
	WatchDocuments(*WatchDocumentsRequest, Yorkie_WatchDocumentsServer) error
	PushPull(context.Context, *PushPullRequest) (*PushPullResponse, error)
	ListChanges(context.Context, *ListChangesRequest) (*ListChangesResponse, error)
}

// UnimplementedYorkieServer can be embedded to have forward compatible implementations.
type UnimplementedYorkieServer struct {
}

func (*UnimplementedYorkieServer) ActivateClient(ctx context.Context, req *ActivateClientRequest) (*ActivateClientResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ActivateClient not implemented")
}
func (*UnimplementedYorkieServer) DeactivateClient(ctx context.Context, req *DeactivateClientRequest) (*DeactivateClientResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeactivateClient not implemented")
}
func (*UnimplementedYorkieServer) UpdatePresence(ctx context.Context, req *UpdatePresenceRequest) (*UpdatePresenceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatePresence not implemented")
}
func (*UnimplementedYorkieServer) AttachDocument(ctx context.Context, req *AttachDocumentRequest) (*AttachDocumentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AttachDocument not implemented")
}
func (*UnimplementedYorkieServer) DetachDocument(ctx context.Context, req *DetachDocumentRequest) (*DetachDocumentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DetachDocument not implemented")
}
func (*UnimplementedYorkieServer) WatchDocuments(req *WatchDocumentsRequest, srv Yorkie_WatchDocumentsServer) error {
	return status.Errorf(codes.Unimplemented, "method WatchDocuments not implemented")
}
func (*UnimplementedYorkieServer) PushPull(ctx context.Context, req *PushPullRequest) (*PushPullResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PushPull not implemented")
}
func (*UnimplementedYorkieServer) ListChanges(ctx context.Context, req *ListChangesRequest) (*ListChangesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListChanges not implemented")
}

func RegisterYorkieServer(s *grpc.Server, srv YorkieServer) {
	s.RegisterService(&_Yorkie_serviceDesc, srv)
}

func _Yorkie_ActivateClient_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ActivateClientRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YorkieServer).ActivateClient(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Yorkie/ActivateClient",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YorkieServer).ActivateClient(ctx, req.(*ActivateClientRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Yorkie_DeactivateClient_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeactivateClientRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YorkieServer).DeactivateClient(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Yorkie/DeactivateClient",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YorkieServer).DeactivateClient(ctx, req.(*DeactivateClientRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Yorkie_UpdatePresence_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdatePresenceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YorkieServer).UpdatePresence(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Yorkie/UpdatePresence",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YorkieServer).UpdatePresence(ctx, req.(*UpdatePresenceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Yorkie_AttachDocument_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AttachDocumentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YorkieServer).AttachDocument(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Yorkie/AttachDocument",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YorkieServer).AttachDocument(ctx, req.(*AttachDocumentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Yorkie_DetachDocument_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DetachDocumentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YorkieServer).DetachDocument(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Yorkie/DetachDocument",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YorkieServer).DetachDocument(ctx, req.(*DetachDocumentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Yorkie_WatchDocuments_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(WatchDocumentsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(YorkieServer).WatchDocuments(m, &yorkieWatchDocumentsServer{stream})
}

type Yorkie_WatchDocumentsServer interface {
	Send(*WatchDocumentsResponse) error
	grpc.ServerStream
}

type yorkieWatchDocumentsServer struct {
	grpc.ServerStream
}

func (x *yorkieWatchDocumentsServer) Send(m *WatchDocumentsResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _Yorkie_PushPull_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PushPullRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YorkieServer).PushPull(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Yorkie/PushPull",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YorkieServer).PushPull(ctx, req.(*PushPullRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Yorkie_ListChanges_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListChangesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YorkieServer).ListChanges(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Yorkie/ListChanges",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YorkieServer).ListChanges(ctx, req.(*ListChangesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Yorkie_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.Yorkie",
	HandlerType: (*YorkieServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ActivateClient",
			Handler:    _Yorkie_ActivateClient_Handler,
		},
		{
			MethodName: "DeactivateClient",
			Handler:    _Yorkie_DeactivateClient_Handler,
		},
		{
			MethodName: "UpdatePresence",
			Handler:    _Yorkie_UpdatePresence_Handler,
		},
		{
			MethodName: "AttachDocument",
			Handler:    _Yorkie_AttachDocument_Handler,
		},
		{
			MethodName: "DetachDocument",
			Handler:    _Yorkie_DetachDocument_Handler,
		},
		{
			MethodName: "PushPull",
			Handler:    _Yorkie_PushPull_Handler,
		},
		{
			MethodName: "ListChanges",
			Handler:    _Yorkie_ListChanges_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "WatchDocuments",
			Handler:       _Yorkie_WatchDocuments_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "yorkie.proto",
}

func (m *ActivateClientRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ActivateClientRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ActivateClientRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ClientKey) > 0 {
		i -= len(m.ClientKey)
		copy(dAtA[i:], m.ClientKey)
		i = encodeVarintYorkie(dAtA, i, uint64(len(m.ClientKey)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ActivateClientResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ActivateClientResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ActivateClientResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ClientId) > 0 {
		i -= len(m.ClientId)
		copy(dAtA[i:], m.ClientId)
		i = encodeVarintYorkie(dAtA, i, uint64(len(m.ClientId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.ClientKey) > 0 {
		i -= len(m.ClientKey)
		copy(dAtA[i:], m.ClientKey)
		i = encodeVarintYorkie(dAtA, i, uint64(len(m.ClientKey)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *DeactivateClientRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DeactivateClientRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DeactivateClientRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ClientId) > 0 {
		i -= len(m.ClientId)
		copy(dAtA[i:], m.ClientId)
		i = encodeVarintYorkie(dAtA, i, uint64(len(m.ClientId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *DeactivateClientResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DeactivateClientResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DeactivateClientResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ClientId) > 0 {
		i -= len(m.ClientId)
		copy(dAtA[i:], m.ClientId)
		i = encodeVarintYorkie(dAtA, i, uint64(len(m.ClientId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *AttachDocumentRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AttachDocumentRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AttachDocumentRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ChangePack != nil {
		{
			size, err := m.ChangePack.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintYorkie(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.ClientId) > 0 {
		i -= len(m.ClientId)
		copy(dAtA[i:], m.ClientId)
		i = encodeVarintYorkie(dAtA, i, uint64(len(m.ClientId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *AttachDocumentResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AttachDocumentResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AttachDocumentResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ChangePack != nil {
		{
			size, err := m.ChangePack.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintYorkie(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.ClientId) > 0 {
		i -= len(m.ClientId)
		copy(dAtA[i:], m.ClientId)
		i = encodeVarintYorkie(dAtA, i, uint64(len(m.ClientId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *DetachDocumentRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DetachDocumentRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DetachDocumentRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ChangePack != nil {
		{
			size, err := m.ChangePack.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintYorkie(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.ClientId) > 0 {
		i -= len(m.ClientId)
		copy(dAtA[i:], m.ClientId)
		i = encodeVarintYorkie(dAtA, i, uint64(len(m.ClientId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *DetachDocumentResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DetachDocumentResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DetachDocumentResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ChangePack != nil {
		{
			size, err := m.ChangePack.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintYorkie(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.ClientKey) > 0 {
		i -= len(m.ClientKey)
		copy(dAtA[i:], m.ClientKey)
		i = encodeVarintYorkie(dAtA, i, uint64(len(m.ClientKey)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *WatchDocumentsRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *WatchDocumentsRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *WatchDocumentsRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.DocumentKeys) > 0 {
		for iNdEx := len(m.DocumentKeys) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.DocumentKeys[iNdEx])
			copy(dAtA[i:], m.DocumentKeys[iNdEx])
			i = encodeVarintYorkie(dAtA, i, uint64(len(m.DocumentKeys[iNdEx])))
			i--
			dAtA[i] = 0x12
		}
	}
	if m.Client != nil {
		{
			size, err := m.Client.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintYorkie(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *WatchDocumentsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *WatchDocumentsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *WatchDocumentsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Body != nil {
		{
			size := m.Body.Size()
			i -= size
			if _, err := m.Body.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	return len(dAtA) - i, nil
}

func (m *WatchDocumentsResponse_Initialization_) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *WatchDocumentsResponse_Initialization_) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.Initialization != nil {
		{
			size, err := m.Initialization.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintYorkie(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}
func (m *WatchDocumentsResponse_Event) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *WatchDocumentsResponse_Event) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.Event != nil {
		{
			size, err := m.Event.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintYorkie(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	return len(dAtA) - i, nil
}
func (m *WatchDocumentsResponse_Initialization) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *WatchDocumentsResponse_Initialization) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *WatchDocumentsResponse_Initialization) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.PeersMapByDoc) > 0 {
		for k := range m.PeersMapByDoc {
			v := m.PeersMapByDoc[k]
			baseI := i
			if v != nil {
				{
					size, err := v.MarshalToSizedBuffer(dAtA[:i])
					if err != nil {
						return 0, err
					}
					i -= size
					i = encodeVarintYorkie(dAtA, i, uint64(size))
				}
				i--
				dAtA[i] = 0x12
			}
			i -= len(k)
			copy(dAtA[i:], k)
			i = encodeVarintYorkie(dAtA, i, uint64(len(k)))
			i--
			dAtA[i] = 0xa
			i = encodeVarintYorkie(dAtA, i, uint64(baseI-i))
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *PushPullRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PushPullRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PushPullRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ChangePack != nil {
		{
			size, err := m.ChangePack.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintYorkie(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.ClientId) > 0 {
		i -= len(m.ClientId)
		copy(dAtA[i:], m.ClientId)
		i = encodeVarintYorkie(dAtA, i, uint64(len(m.ClientId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *PushPullResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PushPullResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PushPullResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ChangePack != nil {
		{
			size, err := m.ChangePack.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintYorkie(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.ClientId) > 0 {
		i -= len(m.ClientId)
		copy(dAtA[i:], m.ClientId)
		i = encodeVarintYorkie(dAtA, i, uint64(len(m.ClientId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *UpdatePresenceRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UpdatePresenceRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UpdatePresenceRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.DocumentKeys) > 0 {
		for iNdEx := len(m.DocumentKeys) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.DocumentKeys[iNdEx])
			copy(dAtA[i:], m.DocumentKeys[iNdEx])
			i = encodeVarintYorkie(dAtA, i, uint64(len(m.DocumentKeys[iNdEx])))
			i--
			dAtA[i] = 0x12
		}
	}
	if m.Client != nil {
		{
			size, err := m.Client.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintYorkie(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *UpdatePresenceResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UpdatePresenceResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UpdatePresenceResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *ListChangesRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListChangesRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ListChangesRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.DocumentKey) > 0 {
		i -= len(m.DocumentKey)
		copy(dAtA[i:], m.DocumentKey)
		i = encodeVarintYorkie(dAtA, i, uint64(len(m.DocumentKey)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.ClientId) > 0 {
		i -= len(m.ClientId)
		copy(dAtA[i:], m.ClientId)
		i = encodeVarintYorkie(dAtA, i, uint64(len(m.ClientId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ListChangesResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListChangesResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ListChangesResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Changes) > 0 {
		for iNdEx := len(m.Changes) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Changes[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintYorkie(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func encodeVarintYorkie(dAtA []byte, offset int, v uint64) int {
	offset -= sovYorkie(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *ActivateClientRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ClientKey)
	if l > 0 {
		n += 1 + l + sovYorkie(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ActivateClientResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ClientKey)
	if l > 0 {
		n += 1 + l + sovYorkie(uint64(l))
	}
	l = len(m.ClientId)
	if l > 0 {
		n += 1 + l + sovYorkie(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DeactivateClientRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ClientId)
	if l > 0 {
		n += 1 + l + sovYorkie(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DeactivateClientResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ClientId)
	if l > 0 {
		n += 1 + l + sovYorkie(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *AttachDocumentRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ClientId)
	if l > 0 {
		n += 1 + l + sovYorkie(uint64(l))
	}
	if m.ChangePack != nil {
		l = m.ChangePack.Size()
		n += 1 + l + sovYorkie(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *AttachDocumentResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ClientId)
	if l > 0 {
		n += 1 + l + sovYorkie(uint64(l))
	}
	if m.ChangePack != nil {
		l = m.ChangePack.Size()
		n += 1 + l + sovYorkie(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DetachDocumentRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ClientId)
	if l > 0 {
		n += 1 + l + sovYorkie(uint64(l))
	}
	if m.ChangePack != nil {
		l = m.ChangePack.Size()
		n += 1 + l + sovYorkie(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DetachDocumentResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ClientKey)
	if l > 0 {
		n += 1 + l + sovYorkie(uint64(l))
	}
	if m.ChangePack != nil {
		l = m.ChangePack.Size()
		n += 1 + l + sovYorkie(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *WatchDocumentsRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Client != nil {
		l = m.Client.Size()
		n += 1 + l + sovYorkie(uint64(l))
	}
	if len(m.DocumentKeys) > 0 {
		for _, s := range m.DocumentKeys {
			l = len(s)
			n += 1 + l + sovYorkie(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *WatchDocumentsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Body != nil {
		n += m.Body.Size()
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *WatchDocumentsResponse_Initialization_) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Initialization != nil {
		l = m.Initialization.Size()
		n += 1 + l + sovYorkie(uint64(l))
	}
	return n
}
func (m *WatchDocumentsResponse_Event) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Event != nil {
		l = m.Event.Size()
		n += 1 + l + sovYorkie(uint64(l))
	}
	return n
}
func (m *WatchDocumentsResponse_Initialization) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.PeersMapByDoc) > 0 {
		for k, v := range m.PeersMapByDoc {
			_ = k
			_ = v
			l = 0
			if v != nil {
				l = v.Size()
				l += 1 + sovYorkie(uint64(l))
			}
			mapEntrySize := 1 + len(k) + sovYorkie(uint64(len(k))) + l
			n += mapEntrySize + 1 + sovYorkie(uint64(mapEntrySize))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *PushPullRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ClientId)
	if l > 0 {
		n += 1 + l + sovYorkie(uint64(l))
	}
	if m.ChangePack != nil {
		l = m.ChangePack.Size()
		n += 1 + l + sovYorkie(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *PushPullResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ClientId)
	if l > 0 {
		n += 1 + l + sovYorkie(uint64(l))
	}
	if m.ChangePack != nil {
		l = m.ChangePack.Size()
		n += 1 + l + sovYorkie(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UpdatePresenceRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Client != nil {
		l = m.Client.Size()
		n += 1 + l + sovYorkie(uint64(l))
	}
	if len(m.DocumentKeys) > 0 {
		for _, s := range m.DocumentKeys {
			l = len(s)
			n += 1 + l + sovYorkie(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UpdatePresenceResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListChangesRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ClientId)
	if l > 0 {
		n += 1 + l + sovYorkie(uint64(l))
	}
	l = len(m.DocumentKey)
	if l > 0 {
		n += 1 + l + sovYorkie(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListChangesResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Changes) > 0 {
		for _, e := range m.Changes {
			l = e.Size()
			n += 1 + l + sovYorkie(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovYorkie(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozYorkie(x uint64) (n int) {
	return sovYorkie(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *ActivateClientRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowYorkie
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ActivateClientRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ActivateClientRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClientKey", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYorkie
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYorkie
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYorkie
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClientKey = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipYorkie(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthYorkie
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ActivateClientResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowYorkie
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ActivateClientResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ActivateClientResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClientKey", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYorkie
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYorkie
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYorkie
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClientKey = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClientId", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYorkie
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthYorkie
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthYorkie
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClientId = append(m.ClientId[:0], dAtA[iNdEx:postIndex]...)
			if m.ClientId == nil {
				m.ClientId = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipYorkie(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthYorkie
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DeactivateClientRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowYorkie
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DeactivateClientRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DeactivateClientRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClientId", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYorkie
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthYorkie
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthYorkie
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClientId = append(m.ClientId[:0], dAtA[iNdEx:postIndex]...)
			if m.ClientId == nil {
				m.ClientId = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipYorkie(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthYorkie
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DeactivateClientResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowYorkie
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DeactivateClientResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DeactivateClientResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClientId", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYorkie
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthYorkie
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthYorkie
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClientId = append(m.ClientId[:0], dAtA[iNdEx:postIndex]...)
			if m.ClientId == nil {
				m.ClientId = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipYorkie(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthYorkie
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AttachDocumentRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowYorkie
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AttachDocumentRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AttachDocumentRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClientId", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYorkie
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthYorkie
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthYorkie
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClientId = append(m.ClientId[:0], dAtA[iNdEx:postIndex]...)
			if m.ClientId == nil {
				m.ClientId = []byte{}
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChangePack", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYorkie
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYorkie
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYorkie
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ChangePack == nil {
				m.ChangePack = &ChangePack{}
			}
			if err := m.ChangePack.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipYorkie(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthYorkie
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AttachDocumentResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowYorkie
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AttachDocumentResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AttachDocumentResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClientId", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYorkie
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthYorkie
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthYorkie
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClientId = append(m.ClientId[:0], dAtA[iNdEx:postIndex]...)
			if m.ClientId == nil {
				m.ClientId = []byte{}
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChangePack", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYorkie
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYorkie
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYorkie
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ChangePack == nil {
				m.ChangePack = &ChangePack{}
			}
			if err := m.ChangePack.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipYorkie(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthYorkie
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DetachDocumentRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowYorkie
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DetachDocumentRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DetachDocumentRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClientId", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYorkie
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthYorkie
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthYorkie
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClientId = append(m.ClientId[:0], dAtA[iNdEx:postIndex]...)
			if m.ClientId == nil {
				m.ClientId = []byte{}
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChangePack", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYorkie
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYorkie
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYorkie
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ChangePack == nil {
				m.ChangePack = &ChangePack{}
			}
			if err := m.ChangePack.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipYorkie(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthYorkie
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DetachDocumentResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowYorkie
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DetachDocumentResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DetachDocumentResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClientKey", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYorkie
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYorkie
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYorkie
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClientKey = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChangePack", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYorkie
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYorkie
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYorkie
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ChangePack == nil {
				m.ChangePack = &ChangePack{}
			}
			if err := m.ChangePack.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipYorkie(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthYorkie
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *WatchDocumentsRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowYorkie
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: WatchDocumentsRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: WatchDocumentsRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Client", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYorkie
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYorkie
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYorkie
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Client == nil {
				m.Client = &Client{}
			}
			if err := m.Client.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DocumentKeys", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYorkie
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYorkie
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYorkie
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DocumentKeys = append(m.DocumentKeys, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipYorkie(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthYorkie
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *WatchDocumentsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowYorkie
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: WatchDocumentsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: WatchDocumentsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Initialization", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYorkie
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYorkie
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYorkie
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &WatchDocumentsResponse_Initialization{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Body = &WatchDocumentsResponse_Initialization_{v}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Event", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYorkie
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYorkie
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYorkie
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &DocEvent{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Body = &WatchDocumentsResponse_Event{v}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipYorkie(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthYorkie
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *WatchDocumentsResponse_Initialization) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowYorkie
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Initialization: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Initialization: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PeersMapByDoc", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYorkie
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYorkie
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYorkie
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.PeersMapByDoc == nil {
				m.PeersMapByDoc = make(map[string]*Clients)
			}
			var mapkey string
			var mapvalue *Clients
			for iNdEx < postIndex {
				entryPreIndex := iNdEx
				var wire uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowYorkie
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					wire |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				fieldNum := int32(wire >> 3)
				if fieldNum == 1 {
					var stringLenmapkey uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowYorkie
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						stringLenmapkey |= uint64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					intStringLenmapkey := int(stringLenmapkey)
					if intStringLenmapkey < 0 {
						return ErrInvalidLengthYorkie
					}
					postStringIndexmapkey := iNdEx + intStringLenmapkey
					if postStringIndexmapkey < 0 {
						return ErrInvalidLengthYorkie
					}
					if postStringIndexmapkey > l {
						return io.ErrUnexpectedEOF
					}
					mapkey = string(dAtA[iNdEx:postStringIndexmapkey])
					iNdEx = postStringIndexmapkey
				} else if fieldNum == 2 {
					var mapmsglen int
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowYorkie
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						mapmsglen |= int(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					if mapmsglen < 0 {
						return ErrInvalidLengthYorkie
					}
					postmsgIndex := iNdEx + mapmsglen
					if postmsgIndex < 0 {
						return ErrInvalidLengthYorkie
					}
					if postmsgIndex > l {
						return io.ErrUnexpectedEOF
					}
					mapvalue = &Clients{}
					if err := mapvalue.Unmarshal(dAtA[iNdEx:postmsgIndex]); err != nil {
						return err
					}
					iNdEx = postmsgIndex
				} else {
					iNdEx = entryPreIndex
					skippy, err := skipYorkie(dAtA[iNdEx:])
					if err != nil {
						return err
					}
					if (skippy < 0) || (iNdEx+skippy) < 0 {
						return ErrInvalidLengthYorkie
					}
					if (iNdEx + skippy) > postIndex {
						return io.ErrUnexpectedEOF
					}
					iNdEx += skippy
				}
			}
			m.PeersMapByDoc[mapkey] = mapvalue
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipYorkie(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthYorkie
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PushPullRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowYorkie
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PushPullRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PushPullRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClientId", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYorkie
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthYorkie
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthYorkie
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClientId = append(m.ClientId[:0], dAtA[iNdEx:postIndex]...)
			if m.ClientId == nil {
				m.ClientId = []byte{}
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChangePack", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYorkie
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYorkie
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYorkie
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ChangePack == nil {
				m.ChangePack = &ChangePack{}
			}
			if err := m.ChangePack.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipYorkie(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthYorkie
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PushPullResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowYorkie
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PushPullResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PushPullResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClientId", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYorkie
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthYorkie
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthYorkie
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClientId = append(m.ClientId[:0], dAtA[iNdEx:postIndex]...)
			if m.ClientId == nil {
				m.ClientId = []byte{}
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChangePack", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYorkie
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYorkie
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYorkie
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ChangePack == nil {
				m.ChangePack = &ChangePack{}
			}
			if err := m.ChangePack.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipYorkie(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthYorkie
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UpdatePresenceRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowYorkie
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UpdatePresenceRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UpdatePresenceRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Client", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYorkie
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYorkie
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYorkie
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Client == nil {
				m.Client = &Client{}
			}
			if err := m.Client.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DocumentKeys", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYorkie
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYorkie
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYorkie
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DocumentKeys = append(m.DocumentKeys, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipYorkie(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthYorkie
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UpdatePresenceResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowYorkie
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UpdatePresenceResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UpdatePresenceResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipYorkie(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthYorkie
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListChangesRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowYorkie
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListChangesRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListChangesRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClientId", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYorkie
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthYorkie
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthYorkie
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClientId = append(m.ClientId[:0], dAtA[iNdEx:postIndex]...)
			if m.ClientId == nil {
				m.ClientId = []byte{}
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DocumentKey", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYorkie
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYorkie
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYorkie
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DocumentKey = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipYorkie(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthYorkie
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListChangesResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowYorkie
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListChangesResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListChangesResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Changes", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYorkie
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYorkie
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYorkie
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Changes = append(m.Changes, &Change{})
			if err := m.Changes[len(m.Changes)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipYorkie(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthYorkie
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipYorkie(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowYorkie
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowYorkie
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowYorkie
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthYorkie
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupYorkie
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthYorkie
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthYorkie        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowYorkie          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupYorkie = fmt.Errorf("proto: unexpected end of group")
)
